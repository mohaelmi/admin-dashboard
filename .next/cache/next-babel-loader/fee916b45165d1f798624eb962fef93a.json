{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport Layout from './layout';\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\nimport Userform from \"./userForm\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, user) {\n      user.username = e.target.value;\n\n      _this.setState({\n        last_edited_user: user\n      });\n\n      console.log(_this.state.last_edited_user);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteUser\", function (e, user, i) {\n      // const { users } = this.state\n      console.log(i);\n      console.log(_this.props.users);\n\n      _this.props.users.splice(i, 1);\n\n      console.log(_this.props.users);\n\n      _this.setState({\n        users: _this.props.users\n      });\n\n      console.log(_this.state.users); // users.splice(i, 1);\n      // this.setState({ users: users })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ggg\", function (e, user) {\n      //   const { currentUser, last_edited_user } = this.state\n      _this.setState({\n        open: true\n      });\n\n      console.log(user.id);\n\n      _this.setState({\n        currentUserName: user.username\n      });\n\n      console.log(user);\n\n      _this.props.users.push(user);\n\n      _this.setState({\n        users: _this.props.users\n      });\n    });\n\n    _this.state = {\n      last_edited_user: null,\n      open: false,\n      setOpen: false,\n      currentUser: '',\n      users: null,\n      last_updated_user: null,\n      currentUserName: ''\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUsers();\n      console.log(this.props.users);\n      this.setState({\n        users: this.props.users\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newUser) {\n        console.log(nextProps.newUser);\n        this.props.users.unshift(nextProps.newUser);\n      }\n    }\n  }, {\n    key: \"render\",\n    //   addLastUpdatedUser = (e, user) => {\n    //     console.log(user)\n    //   }\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Grid, {\n        container: true,\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.props.users.map(function (user, i) {\n        return (// <Box component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"background.paper\">\n          //     block\n          // </Box>\n          __jsx(Box, {\n            key: i,\n            component: \"span\",\n            display: \"block\",\n            p: 1,\n            m: 1,\n            bgcolor: \"#e0e0e0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, __jsx(Box, {\n            p: 1,\n            m: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"Name: \", user.name, \" \"), __jsx(Box, {\n            p: 1,\n            m: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"User Name: \", user.username), __jsx(Fab, {\n            color: \"primary\",\n            \"aria-label\": \"edit\",\n            onClick: function onClick(e) {\n              return _this2.ggg(e, user);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, __jsx(EditIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          })), __jsx(Dialog, {\n            open: _this2.state.open,\n            onClose: _this2.handleClose,\n            \"aria-labelledby\": \"form-dialog-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, __jsx(DialogTitle, {\n            id: \"form-dialog-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \"change user name \"), __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, __jsx(DialogContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, __jsx(DialogContentText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \"your user name is \", _this2.state.currentUserName), __jsx(TextField, {\n            onChange: function onChange(e) {\n              return _this2.handleChange(e, user);\n            },\n            autoFocus: true,\n            margin: \"dense\",\n            fullWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }))), __jsx(DialogActions, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, __jsx(Button, {\n            onClick: _this2.handleClose,\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, \"Cancel\"), __jsx(Button, {\n            onClick: _this2.handleClose,\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, \"save\"))), __jsx(Button, {\n            variant: \"contained\",\n            color: \"secondary\" //  className={classes.button}\n            ,\n            startIcon: __jsx(DeleteIcon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }),\n            onClick: function onClick(e) {\n              return _this2.deleteUser(e, user, i);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \"Delete\"))\n        );\n      })), __jsx(Grid, {\n        item: true,\n        sm: true,\n        bgcolor: \"e0e0e0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        m: 1,\n        bgcolor: \"#e0e0e0\",\n        height: \"98%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(Userform, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nUsers.PropTypes = {\n  fetchUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  newUser: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users.users,\n    newUser: state.users.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers: fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["Layout","React","Component","Popup","connect","PropTypes","CreateUsers","fetchUsers","Userform","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddIcon","EditIcon","DeleteIcon","Fab","Grid","Box","Users","props","e","user","username","target","value","setState","last_edited_user","console","log","state","i","users","splice","open","id","currentUserName","push","setOpen","currentUser","last_updated_user","nextProps","newUser","unshift","marginTop","map","name","ggg","handleClose","handleChange","deleteUser","func","isRequired","array","object","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from './layout'\r\nimport React, { Component } from 'react'\r\nimport Popup from \"reactjs-popup\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport {  CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\r\nimport  Userform  from \"./userForm\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            last_edited_user: null,\r\n            open: false, \r\n            setOpen: false,\r\n            currentUser: '',\r\n            users: null,\r\n            last_updated_user: null,\r\n            currentUserName: ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUsers();\r\n        console.log(this.props.users)\r\n         this.setState({ users: this.props.users })\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newUser){\r\n            console.log(nextProps.newUser)\r\n            this.props.users.unshift(nextProps.newUser)\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e, user) => {\r\n        user.username = e.target.value\r\n       this.setState({ last_edited_user: user })\r\n       console.log(this.state.last_edited_user)\r\n\r\n    }\r\n    deleteUser = (e, user, i) => {\r\n        // const { users } = this.state\r\n        console.log(i)\r\n        console.log(this.props.users)\r\n        this.props.users.splice(i, 1)\r\n        console.log(this.props.users)\r\n        this.setState({users: this.props.users })\r\n        console.log(this.state.users)\r\n\r\n        // users.splice(i, 1);\r\n        // this.setState({ users: users })\r\n    } \r\n\r\n    // handleCreatUser = (e) => {\r\n    //     //const { newUser } = this.state\r\n    //     this.setState({ [e.target.name] : e.target.value })\r\n        \r\n    //     const newUser = {\r\n    //         id: this.state.id,\r\n    //         name: this.state.name,\r\n    //         username: this.state.username\r\n    //     }\r\n\r\n    //     this.setState({ newUser : newUser })\r\n    // }\r\n\r\n    // buCreateUser = (event) => {\r\n    //     event.preventDefault();\r\n    //     const { newUser, users } = this.state\r\n    //     users.push(newUser)\r\n    //     this.setState({ users })\r\n    //     console.log(newUser)\r\n    //  }\r\n\r\n    //  handleClickOpen = () => {\r\n    //      this.setState({ open: true })\r\n    //   };\r\n    \r\n     handleClose = () => {\r\n        this.setState({ open: false }) \r\n      };\r\n\r\n      ggg = (e, user) => {\r\n        //   const { currentUser, last_edited_user } = this.state\r\n          this.setState({ open: true })\r\n        console.log(user.id)\r\n        this.setState({ currentUserName: user.username })\r\n        console.log(user)\r\n        this.props.users.push(user)\r\n        this.setState({users: this.props.users })\r\n      }\r\n\r\n    //   addLastUpdatedUser = (e, user) => {\r\n    //     console.log(user)\r\n    //   }\r\n\r\n    render() {\r\n        return(\r\n            \r\n                \r\n        <Grid container style={{ marginTop: 50}}>\r\n            <Grid item sm ={ 8   }>\r\n                \r\n            {\r\n                this.props.users.map((user, i) => (\r\n                    // <Box component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"background.paper\">\r\n                    //     block\r\n                    // </Box>\r\n                    <Box  key={i} component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"#e0e0e0\">\r\n                    <Box  p={1} m={1}>Name: {user.name} </Box>\r\n                    <Box p={1} m={1}>User Name: {user.username}</Box>\r\n                    \r\n                    {/* <textarea onChange={(e) =>  this.handleChange(e, user) } value = { user.username}></textarea> */}\r\n                    \r\n                <Fab color=\"primary\" aria-label=\"edit\" onClick={(e) => this.ggg(e, user)}>\r\n                    <EditIcon />\r\n                </Fab>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">change user name </DialogTitle>\r\n                    <div >\r\n                    <DialogContent>\r\n                    <DialogContentText>\r\n                        your user name is { this.state.currentUserName }\r\n                    </DialogContentText>\r\n                        <TextField onChange={(e) =>  this.handleChange(e, user) } \r\n                        autoFocus\r\n                         margin=\"dense\"\r\n                        fullWidth\r\n                    />\r\n                    </DialogContent>\r\n                    </div>\r\n                    <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={ this.handleClose} color=\"primary\">\r\n                        save\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    //  className={classes.button}\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick = { (e)=> this.deleteUser(e, user, i) }\r\n                    >\r\n                    Delete\r\n                    </Button>\r\n                </Box>    \r\n                            ))\r\n                        } \r\n                        </Grid> \r\n                        <Grid item sm bgcolor=\"e0e0e0\">\r\n                        <Box   component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"#e0e0e0\" height= '98%'>\r\n                        <Userform   />\r\n                        </Box>\r\n                        </Grid>\r\n                        </Grid>\r\n                                \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nUsers.PropTypes = {\r\n    fetchUsers: PropTypes.func.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    newUser: PropTypes.object \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}