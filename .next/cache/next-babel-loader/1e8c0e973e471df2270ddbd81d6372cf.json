{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport Layout from './layout';\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\nimport Userform from \"./userForm\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (e, user) => {\n      user.username = e.target.value;\n      this.setState({\n        last_edited_user: user\n      });\n      console.log(this.state.last_edited_user);\n    });\n\n    _defineProperty(this, \"handleClickOpen\", () => {\n      this.setState({\n        open: true\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        open: false\n      });\n    });\n\n    this.state = {\n      last_edited_user: null,\n      open: false,\n      setOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUsers();\n    console.log(this.props.users);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newUser) {\n      console.log(nextProps.newUser);\n      this.props.users.unshift(nextProps.newUser);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(Userform, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.props.users.map((user, i) => __jsx(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Name : \", user.name, \" \"), __jsx(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"User Name : \", user.username), __jsx(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Open form dialog\"), __jsx(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"user name \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"change user name\"), __jsx(TextField, {\n      onChange: e => this.handleChange(e, user),\n      autoFocus: true,\n      margin: \"dense\",\n      value: user.username,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), __jsx(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Cancel\"), __jsx(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"save\"))), __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\" //  className={classes.button}\n      ,\n      startIcon: __jsx(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nUsers.PropTypes = {\n  fetchUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  newUser: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  users: state.users.users,\n  newUser: state.users.user\n});\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["Layout","React","Component","Popup","connect","PropTypes","CreateUsers","fetchUsers","Userform","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DeleteIcon","Users","constructor","props","e","user","username","target","value","setState","last_edited_user","console","log","state","open","setOpen","componentDidMount","users","componentWillReceiveProps","nextProps","newUser","unshift","render","map","i","name","handleClickOpen","handleClose","handleChange","func","isRequired","array","object","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from './layout'\r\nimport React, { Component } from 'react'\r\nimport Popup from \"reactjs-popup\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport {  CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\r\nimport  Userform  from \"./userForm\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            last_edited_user: null,\r\n            open: false, \r\n            setOpen: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUsers();\r\n        console.log(this.props.users)\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newUser){\r\n            console.log(nextProps.newUser)\r\n            this.props.users.unshift(nextProps.newUser)\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e, user) => {\r\n        user.username = e.target.value\r\n       this.setState({ last_edited_user: user })\r\n       console.log(this.state.last_edited_user)\r\n\r\n    }\r\n    // deleteUser = (e, user, i) => {\r\n    //     const { users } = this.state\r\n    //     console.log(user.id)\r\n    //     users.splice(i, 1);\r\n    //     this.setState({ users: users })\r\n    // } \r\n\r\n    // handleCreatUser = (e) => {\r\n    //     //const { newUser } = this.state\r\n    //     this.setState({ [e.target.name] : e.target.value })\r\n        \r\n    //     const newUser = {\r\n    //         id: this.state.id,\r\n    //         name: this.state.name,\r\n    //         username: this.state.username\r\n    //     }\r\n\r\n    //     this.setState({ newUser : newUser })\r\n    // }\r\n\r\n    // buCreateUser = (event) => {\r\n    //     event.preventDefault();\r\n    //     const { newUser, users } = this.state\r\n    //     users.push(newUser)\r\n    //     this.setState({ users })\r\n    //     console.log(newUser)\r\n    //  }\r\n\r\n     handleClickOpen = () => {\r\n         this.setState({ open: true })\r\n      };\r\n    \r\n     handleClose = () => {\r\n        this.setState({ open: false }) \r\n      };\r\n\r\n    render() {\r\n        return(\r\n            \r\n                <div> \r\n                <Userform />\r\n                    {\r\n                        this.props.users.map((user, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >Name : {user.name} </h3>\r\n                            <h4 >User Name : {user.username}</h4>\r\n                            {/* <textarea onChange={(e) =>  this.handleChange(e, user) } value = { user.username}></textarea> */}\r\n                           \r\n      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">user name </DialogTitle>\r\n          <div >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            change user name\r\n          </DialogContentText>\r\n             <TextField onChange={(e) =>  this.handleChange(e, user) } \r\n            autoFocus\r\n            margin=\"dense\"\r\n            value = { user.username}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n          </div>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            save\r\n          </Button>\r\n         </DialogActions>\r\n       </Dialog>\r\n       <Button\r\n         variant=\"contained\"\r\n         color=\"secondary\"\r\n        //  className={classes.button}\r\n         startIcon={<DeleteIcon />}\r\n        >\r\n           Delete\r\n        </Button>\r\n    </div>    \r\n                ))\r\n            }  \r\n            </div>\r\n                    \r\n                      \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nUsers.PropTypes = {\r\n    fetchUsers: PropTypes.func.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    newUser: PropTypes.object \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}