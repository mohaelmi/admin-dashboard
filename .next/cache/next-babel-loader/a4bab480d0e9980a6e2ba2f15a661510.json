{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Comments from './comments';\nimport Link from 'next/link';\nimport Popup from \"reactjs-popup\";\nimport Posts from \"../components/posts\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, post) {\n      post.body = e.target.value;\n\n      _this.setState({\n        updatedPost: post\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitPost\", function () {\n      _this.setState({\n        editOne: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deletePost\", function (e, post, i) {\n      var posts = _this.state.posts;\n      console.log(post.id);\n      posts.splice(i, 1);\n\n      _this.setState({\n        posts: posts\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"creatPost\", function (e) {\n      //const { newPost } = this.state.newPost\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      var id = _this.state.id;\n      var title = _this.state.title;\n      var body = _this.state.body;\n      var newPost = {\n        id: id,\n        title: title,\n        body: body\n      };\n\n      _this.setState({\n        newPost: newPost\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"buCreatePost\", function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          posts = _this$state.posts,\n          newPost = _this$state.newPost;\n      console.log(posts);\n      posts.push(newPost);\n\n      _this.setState({\n        posts: posts\n      });\n\n      console.log(newPost);\n    });\n\n    _this.state = {\n      posts: [],\n      title: null,\n      body: null,\n      id: null,\n      newPost: {\n        title: null,\n        body: null,\n        id: null\n      },\n      editOne: null,\n      updatedPost: null,\n      showCreatePostForm: false\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var posts = this.props.posts;\n      this.setState({\n        posts: posts\n      });\n    }\n  }, {\n    key: \"updatePost\",\n    value: function updatePost(post) {\n      var editOne = this.state.editOne;\n      this.setState({\n        editOne: post.id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          editOne = _this$state2.editOne,\n          posts = _this$state2.posts,\n          updatedPost = _this$state2.updatedPost;\n      console.log('uuuuuu', updatedPost);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://jsonplaceholder.typicode.com/posts'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                posts: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/pages/index.js"],"names":["Fetch","React","Component","Layout","Comments","Link","Popup","Posts","Index","props","e","post","body","target","value","setState","updatedPost","editOne","i","posts","state","console","log","id","splice","name","title","newPost","event","preventDefault","push","showCreatePostForm","fetch","res","json","data"],"mappings":"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","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from './comments'\r\nimport Link from 'next/link';\r\nimport Popup from \"reactjs-popup\"\r\nimport Posts from \"../components/posts\";\r\n\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n           \r\n            title: null,\r\n            body: null, \r\n            id: null,\r\n            newPost: {\r\n              title: null,\r\n              body: null, \r\n              id: null,\r\n            },\r\n            editOne: null,\r\n            updatedPost : null,\r\n            showCreatePostForm: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne } = this.state;\r\n        this.setState({editOne : post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n     deletePost = (e, post, i) => {\r\n         const { posts } = this.state\r\n         console.log(post.id)\r\n         posts.splice(i, 1);\r\n         this.setState({ posts: posts })\r\n     } \r\n\r\n     creatPost = (e) => {\r\n         //const { newPost } = this.state.newPost\r\n        this.setState({ [e.target.name] : e.target.value })\r\n        const  id = this.state.id\r\n        const title = this.state.title\r\n        const body = this.state.body\r\n        const newPost = {\r\n            id: id,\r\n            title: title,\r\n            body: body\r\n        }\r\n\r\n        this.setState({ newPost : newPost })\r\n        \r\n    }\r\n    \r\n    buCreatePost = (event) => {\r\n        event.preventDefault();\r\n        const { posts, newPost } = this.state\r\n        console.log(posts)\r\n        posts.push(newPost)\r\n        this.setState({ posts })\r\n        console.log(newPost)\r\n     }\r\n\r\n    render() {\r\n        \r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n           {/* <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \r\n             <button onClick={ ()=>{ this.setState({ showCreatePostForm: true }) } }> create new post </button>\r\n            { this.state.showCreatePostForm  && <form >\r\n               <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.creatPost(e) }}  /><br></br>\r\n                <label >title</label><input  type=\"text\" name=\"title\" onChange={(e)=>{ this.creatPost(e) }}   />\r\n                <textarea name=\"body\" onChange={(e)=>{ this.creatPost(e) }} style={  {padding: '20px'}  }></textarea>\r\n                <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreatePost } />\r\n               </form> }\r\n            </div>\r\n                <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        \r\n                            \r\n            <Popup trigger={<button onClick={() => this.updatePost(post)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, post)} style={  {padding: '40px'}  }>{post.body}</textarea>\r\n                        </div>\r\n                         <button  onClick={this.submitPost }>save</button>\r\n            </Popup>\r\n            <button onClick={ (e) => this.deletePost(e, post, i) }> delete </button>\r\n                         </div>\r\n                        ))\r\n                    }\r\n\r\n                  </div>   */}\r\n                  {/* <Posts /> */}\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}