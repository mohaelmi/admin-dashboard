{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport Layout from './layout';\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { fetchUsers } from \"../redux/actions/userActions\"; // import { CreateUsers } from '../redux/actions/userActions'\n\nimport Userform from \"./userForm\";\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (e, user) => {\n      user.username = e.target.value; //console.log( user )\n\n      this.setState({\n        last_edited_user: user\n      }); //    const  last_edited_user = user\n\n      console.log(this.state.last_edited_user); //    const lastapp = this.state.last_edited_user\n      //    this.props.CreateUsers(lastapp)\n    });\n\n    this.state = {\n      last_edited_user: null\n    }; // this.state = {\n    //     users: [],\n    //     last_edited_user: null,\n    //     showCreateUserForm: false,\n    //     id: null,\n    //     name: null,\n    //     username: null,\n    //     newUser: {\n    //         id: null,\n    //         name: null,\n    //         username: null\n    //     }\n  }\n\n  componentWillMount() {\n    // let {users} = this.props;\n    // this.setState({users});\n    this.props.fetchUsers();\n    console.log(this.props.users);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newUser) {\n      console.log(nextProps.newUser);\n      this.props.users.unshift(nextProps.newUser);\n    }\n  } // static async getInitialProps(){\n  //     const res = await fetch('http://jsonplaceholder.typicode.com/users');\n  //     const data = await res.json();\n  //     return { users: data }\n  // }\n\n\n  // deleteUser = (e, user, i) => {\n  //     const { users } = this.state\n  //     console.log(user.id)\n  //     users.splice(i, 1);\n  //     this.setState({ users: users })\n  // } \n  // handleCreatUser = (e) => {\n  //     //const { newUser } = this.state\n  //     this.setState({ [e.target.name] : e.target.value })\n  //     const newUser = {\n  //         id: this.state.id,\n  //         name: this.state.name,\n  //         username: this.state.username\n  //     }\n  //     this.setState({ newUser : newUser })\n  // }\n  // buCreateUser = (event) => {\n  //     event.preventDefault();\n  //     const { newUser, users } = this.state\n  //     users.push(newUser)\n  //     this.setState({ users })\n  //     console.log(newUser)\n  //  }\n  render() {\n    // let { users } = this.state\n    // console.log(users)\n    // return (\n    //     <Layout>\n    //     <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \n    //      <button onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } }> create new User </button>\n    //     { this.state.showCreateUserForm  && <form >\n    //        <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.handleCreatUser(e) }}  /><br></br>\n    //         <label >Name</label><input  type=\"text\" name=\"name\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\n    //         <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\n    //         <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreateUser } />\n    //        </form> }\n    //     </div>  \n    //         {\n    //                 users.map((user, i) => (\n    //                     <div  key={i} >\n    //                     <h3 >Name : {user.name} </h3>\n    //                     <h4 >User Name : {user.username}</h4>\n    //     <Popup trigger={<button >update user name</button>}\n    //         position=\"right center\">\n    //         <div>\n    //             <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\n    //         </div>\n    //             <button >save</button>\n    //     </Popup>\n    //     <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>    \n    //    </div>\n    //             ))\n    //         }\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(Userform, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.props.users.map((user, i) => __jsx(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Name : \", user.name, \" \"), __jsx(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"User Name : \", user.username), __jsx(Popup, {\n      trigger: __jsx(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"update user name\"),\n      position: \"right center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, __jsx(\"textarea\", {\n      onChange: e => this.handleChange(e, user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, user.username)), __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"save\")), __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" delete user\"))));\n  }\n\n}\n\nUsers.PropTypes = {\n  fetchUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  newUser: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  users: state.users.users,\n  newUser: state.users.user\n});\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["Layout","React","Component","Popup","connect","PropTypes","fetchUsers","Userform","Users","constructor","props","e","user","username","target","value","setState","last_edited_user","console","log","state","componentWillMount","users","componentWillReceiveProps","nextProps","newUser","unshift","render","map","i","name","handleChange","func","isRequired","array","object","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from './layout'\r\nimport React, { Component } from 'react'\r\nimport Popup from \"reactjs-popup\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport {  fetchUsers } from \"../redux/actions/userActions\";\r\n// import { CreateUsers } from '../redux/actions/userActions'\r\n\r\nimport  Userform  from \"./userForm\";\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            last_edited_user: null\r\n        }\r\n\r\n        // this.state = {\r\n        //     users: [],\r\n        //     last_edited_user: null,\r\n        //     showCreateUserForm: false,\r\n        //     id: null,\r\n        //     name: null,\r\n        //     username: null,\r\n        //     newUser: {\r\n        //         id: null,\r\n        //         name: null,\r\n        //         username: null\r\n        //     }\r\n        }\r\n\r\n    componentWillMount() {\r\n        // let {users} = this.props;\r\n        // this.setState({users});\r\n        this.props.fetchUsers();\r\n        console.log(this.props.users)\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newUser){\r\n            console.log(nextProps.newUser)\r\n            this.props.users.unshift(nextProps.newUser)\r\n        }\r\n    }\r\n\r\n    // static async getInitialProps(){\r\n    //     const res = await fetch('http://jsonplaceholder.typicode.com/users');\r\n    //     const data = await res.json();\r\n    //     return { users: data }\r\n    // }\r\n\r\n    handleChange = (e, user) => {\r\n        user.username = e.target.value\r\n       //console.log( user )\r\n       this.setState({ last_edited_user: user })\r\n    //    const  last_edited_user = user\r\n       console.log(this.state.last_edited_user)\r\n    //    const lastapp = this.state.last_edited_user\r\n    //    this.props.CreateUsers(lastapp)\r\n    }\r\n    // deleteUser = (e, user, i) => {\r\n    //     const { users } = this.state\r\n    //     console.log(user.id)\r\n    //     users.splice(i, 1);\r\n    //     this.setState({ users: users })\r\n    // } \r\n\r\n    // handleCreatUser = (e) => {\r\n    //     //const { newUser } = this.state\r\n    //     this.setState({ [e.target.name] : e.target.value })\r\n        \r\n    //     const newUser = {\r\n    //         id: this.state.id,\r\n    //         name: this.state.name,\r\n    //         username: this.state.username\r\n    //     }\r\n\r\n    //     this.setState({ newUser : newUser })\r\n    // }\r\n\r\n    // buCreateUser = (event) => {\r\n    //     event.preventDefault();\r\n    //     const { newUser, users } = this.state\r\n    //     users.push(newUser)\r\n    //     this.setState({ users })\r\n    //     console.log(newUser)\r\n    //  }\r\n\r\n    render() {\r\n        \r\n        // let { users } = this.state\r\n        // console.log(users)\r\n        // return (\r\n        //     <Layout>\r\n        //     <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \r\n        //      <button onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } }> create new User </button>\r\n        //     { this.state.showCreateUserForm  && <form >\r\n        //        <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.handleCreatUser(e) }}  /><br></br>\r\n        //         <label >Name</label><input  type=\"text\" name=\"name\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\r\n        //         <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\r\n        //         <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreateUser } />\r\n        //        </form> }\r\n        //     </div>  \r\n        //         {\r\n        //                 users.map((user, i) => (\r\n        //                     <div  key={i} >\r\n        //                     <h3 >Name : {user.name} </h3>\r\n        //                     <h4 >User Name : {user.username}</h4>\r\n                        \r\n                            \r\n        //     <Popup trigger={<button >update user name</button>}\r\n        //         position=\"right center\">\r\n        //         <div>\r\n        //             <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\r\n        //         </div>\r\n        //             <button >save</button>\r\n        //     </Popup>\r\n\r\n        //     <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>    \r\n\r\n        //    </div>\r\n        //             ))\r\n        //         }\r\n        return(\r\n            \r\n                <div> \r\n                <Userform />\r\n                    {\r\n                        this.props.users.map((user, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >Name : {user.name} </h3>\r\n                            <h4 >User Name : {user.username}</h4>\r\n                           \r\n                <Popup trigger={<button >update user name</button>}\r\n                    position=\"right center\">\r\n                    <div>\r\n                     <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\r\n                    </div>\r\n                        <button >save</button>\r\n                </Popup>\r\n\r\n                <button > delete user</button>\r\n                </div>    \r\n                ))\r\n            }  \r\n            </div>\r\n                    \r\n                      \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nUsers.PropTypes = {\r\n    fetchUsers: PropTypes.func.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    newUser: PropTypes.object \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}