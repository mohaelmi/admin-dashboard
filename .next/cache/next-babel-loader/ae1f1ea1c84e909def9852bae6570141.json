{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Comments from './comments';\nimport Link from 'next/link';\nimport Popup from \"reactjs-popup\";\nimport Posts from \"../components/posts\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (e, post) => {\n      post.body = e.target.value;\n      this.setState({\n        updatedPost: post\n      });\n    });\n\n    _defineProperty(this, \"submitPost\", () => {\n      this.setState({\n        editOne: null\n      });\n    });\n\n    _defineProperty(this, \"deletePost\", (e, post, i) => {\n      const {\n        posts\n      } = this.state;\n      console.log(post.id);\n      posts.splice(i, 1);\n      this.setState({\n        posts: posts\n      });\n    });\n\n    _defineProperty(this, \"creatPost\", e => {\n      //const { newPost } = this.state.newPost\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      const id = this.state.id;\n      const title = this.state.title;\n      const body = this.state.body;\n      const newPost = {\n        id: id,\n        title: title,\n        body: body\n      };\n      this.setState({\n        newPost: newPost\n      });\n    });\n\n    _defineProperty(this, \"buCreatePost\", event => {\n      event.preventDefault();\n      const {\n        posts,\n        newPost\n      } = this.state;\n      console.log(posts);\n      posts.push(newPost);\n      this.setState({\n        posts\n      });\n      console.log(newPost);\n    });\n\n    this.state = {\n      posts: [],\n      title: null,\n      body: null,\n      id: null,\n      newPost: {\n        title: null,\n        body: null,\n        id: null\n      },\n      editOne: null,\n      updatedPost: null,\n      showCreatePostForm: false\n    };\n  }\n\n  componentDidMount() {\n    let {\n      posts\n    } = this.props;\n    this.setState({\n      posts\n    });\n  }\n\n  static async getInitialProps() {\n    const res = await fetch('http://jsonplaceholder.typicode.com/posts');\n    const data = await res.json();\n    return {\n      posts: data\n    };\n  }\n\n  updatePost(post) {\n    let {\n      editOne\n    } = this.state;\n    this.setState({\n      editOne: post.id\n    });\n  }\n\n  render() {\n    let {\n      editOne,\n      posts,\n      updatedPost\n    } = this.state;\n    console.log('uuuuuu', updatedPost);\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Posts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/pages/index.js"],"names":["Fetch","React","Component","Layout","Comments","Link","Popup","Posts","Index","constructor","props","e","post","body","target","value","setState","updatedPost","editOne","i","posts","state","console","log","id","splice","name","title","newPost","event","preventDefault","push","showCreatePostForm","componentDidMount","getInitialProps","res","fetch","data","json","updatePost","render"],"mappings":"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","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from './comments'\r\nimport Link from 'next/link';\r\nimport Popup from \"reactjs-popup\"\r\nimport Posts from \"../components/posts\";\r\n\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n           \r\n            title: null,\r\n            body: null, \r\n            id: null,\r\n            newPost: {\r\n              title: null,\r\n              body: null, \r\n              id: null,\r\n            },\r\n            editOne: null,\r\n            updatedPost : null,\r\n            showCreatePostForm: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne } = this.state;\r\n        this.setState({editOne : post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n     deletePost = (e, post, i) => {\r\n         const { posts } = this.state\r\n         console.log(post.id)\r\n         posts.splice(i, 1);\r\n         this.setState({ posts: posts })\r\n     } \r\n\r\n     creatPost = (e) => {\r\n         //const { newPost } = this.state.newPost\r\n        this.setState({ [e.target.name] : e.target.value })\r\n        const  id = this.state.id\r\n        const title = this.state.title\r\n        const body = this.state.body\r\n        const newPost = {\r\n            id: id,\r\n            title: title,\r\n            body: body\r\n        }\r\n\r\n        this.setState({ newPost : newPost })\r\n        \r\n    }\r\n    \r\n    buCreatePost = (event) => {\r\n        event.preventDefault();\r\n        const { posts, newPost } = this.state\r\n        console.log(posts)\r\n        posts.push(newPost)\r\n        this.setState({ posts })\r\n        console.log(newPost)\r\n     }\r\n\r\n    render() {\r\n        \r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n           {/* <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \r\n             <button onClick={ ()=>{ this.setState({ showCreatePostForm: true }) } }> create new post </button>\r\n            { this.state.showCreatePostForm  && <form >\r\n               <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.creatPost(e) }}  /><br></br>\r\n                <label >title</label><input  type=\"text\" name=\"title\" onChange={(e)=>{ this.creatPost(e) }}   />\r\n                <textarea name=\"body\" onChange={(e)=>{ this.creatPost(e) }} style={  {padding: '20px'}  }></textarea>\r\n                <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreatePost } />\r\n               </form> }\r\n            </div>\r\n                <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        \r\n                            \r\n            <Popup trigger={<button onClick={() => this.updatePost(post)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, post)} style={  {padding: '40px'}  }>{post.body}</textarea>\r\n                        </div>\r\n                         <button  onClick={this.submitPost }>save</button>\r\n            </Popup>\r\n            <button onClick={ (e) => this.deletePost(e, post, i) }> delete </button>\r\n                         </div>\r\n                        ))\r\n                    }\r\n\r\n                  </div>   */}\r\n                  <Posts />\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}