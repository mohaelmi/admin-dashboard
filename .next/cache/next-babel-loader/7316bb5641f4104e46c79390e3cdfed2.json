{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Comments from '../components/commonts';\nimport Link from 'next/link';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, post) {\n      post.body = e.target.value;\n\n      _this.setState({\n        updatedPost: post\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitPost\", function () {\n      _this.setState({\n        editOne: null\n      });\n    });\n\n    _this.state = {\n      posts: [],\n      editOne: null,\n      updatedPost: null\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var posts = this.props.posts;\n      this.setState({\n        posts: posts\n      });\n    }\n  }, {\n    key: \"updatePost\",\n    value: function updatePost(post) {\n      var editOne = this.state.editOne;\n      this.setState({\n        editOne: post.id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          editOne = _this$state.editOne,\n          posts = _this$state.posts,\n          updatedPost = _this$state.updatedPost;\n      console.log('uuuuuu', updatedPost);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          position: \"absolute\",\n          left: \"150px\",\n          width: \"300px\",\n          height: \"120px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, posts.map(function (post, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, __jsx(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, post.title, \" \"), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, post.body), editOne === post.id && __jsx(\"textarea\", {\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, post.body), __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this2.updatePost(post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"update\"), editOne === post.id && __jsx(\"button\", {\n          onClick: _this2.submitPost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"submit\"));\n      }), __jsx(Modal.Dialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Modal title\")), __jsx(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Modal body text goes here.\")), __jsx(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(Button, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Close\"), __jsx(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Save changes\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://jsonplaceholder.typicode.com/posts'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                posts: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/pages/index.js"],"names":["Fetch","React","Component","Layout","Comments","Link","Index","props","e","post","body","target","value","setState","updatedPost","editOne","state","posts","id","console","log","position","left","width","height","map","i","title","handleChange","updatePost","submitPost","fetch","res","json","data"],"mappings":"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","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from '../components/commonts'\r\nimport Link from 'next/link';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n            editOne: null,\r\n            updatedPost : null  \r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne} = this.state;\r\n        this.setState({editOne:post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n    render() {\r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n                <div style={  {position : \"absolute\",\r\n            left:  \"150px\",\r\n            width: \"300px\",\r\n            height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        {(editOne === post.id) && <textarea onChange={(e) => this.handleChange(e, post)}>{post.body}</textarea>}\r\n                            <button onClick={() => this.updatePost(post)}>update</button>\r\n                        {(editOne === post.id) && <button onClick={this.submitPost }>submit</button> }\r\n                         </div>\r\n                        ))\r\n                    }\r\n                    <Modal.Dialog>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Modal title</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <p>Modal body text goes here.</p>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\">Close</Button>\r\n                            <Button variant=\"primary\">Save changes</Button>\r\n                        </Modal.Footer>\r\n                </Modal.Dialog>\r\n                  </div>  \r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}