{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport Layout from './layout';\nimport React, { Component } from 'react'; // import Popup from \"reactjs-popup\"\n\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/actions/userActions\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n    _this.state = {};\n    _this.state = {\n      users: [] // last_edited_user: null,\n      // showCreateUserForm: false,\n      // id: null,\n      // name: null,\n      // username: null,\n      // newUser: {\n      //     id: null,\n      //     name: null,\n      //     username: null\n\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // let {users} = this.props;\n      this.setState({\n        users: users\n      });\n      console.log(this.state.users);\n    } // static async getInitialProps(){\n    //     const res = await fetch('http://jsonplaceholder.typicode.com/users');\n    //     const data = await res.json();\n    //     return { users: data }\n    // }\n    // handleChange = (e, user) => {\n    //     user.username = e.target.value\n    //    // console.log( e.target.value )\n    //    this.setState({ last_edited_user: user })\n    // }\n    // deleteUser = (e, user, i) => {\n    //     const { users } = this.state\n    //     console.log(user.id)\n    //     users.splice(i, 1);\n    //     this.setState({ users: users })\n    // } \n    // handleCreatUser = (e) => {\n    //     //const { newUser } = this.state\n    //     this.setState({ [e.target.name] : e.target.value })\n    //     const newUser = {\n    //         id: this.state.id,\n    //         name: this.state.name,\n    //         username: this.state.username\n    //     }\n    //     this.setState({ newUser : newUser })\n    // }\n    // buCreateUser = (event) => {\n    //     event.preventDefault();\n    //     const { newUser, users } = this.state\n    //     users.push(newUser)\n    //     this.setState({ users })\n    //     console.log(newUser)\n    //  }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // let { users } = this.state\n      // console.log(users)\n      // return (\n      //     <Layout>\n      //     <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \n      //      <button onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } }> create new User </button>\n      //     { this.state.showCreateUserForm  && <form >\n      //        <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.handleCreatUser(e) }}  /><br></br>\n      //         <label >Name</label><input  type=\"text\" name=\"name\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\n      //         <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\n      //         <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreateUser } />\n      //        </form> }\n      //     </div>  \n      //         {\n      //                 users.map((user, i) => (\n      //                     <div  key={i} >\n      //                     <h3 >Name : {user.name} </h3>\n      //                     <h4 >User Name : {user.username}</h4>\n      //     <Popup trigger={<button >update user name</button>}\n      //         position=\"right center\">\n      //         <div>\n      //             <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\n      //         </div>\n      //             <button >save</button>\n      //     </Popup>\n      //     <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>    \n      //    </div>\n      //             ))\n      //         }\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.props.users.map(function (user, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, __jsx(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Name : \", user.name, \" \"), __jsx(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"User Name : \", user.username));\n      }));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers: fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["Layout","React","Component","connect","fetchUsers","Users","props","state","users","setState","console","log","map","user","i","name","username","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAUC,UAAV,QAA4B,8BAA5B;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAIA,UAAKA,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE,CAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVS,KAAb;AANe;AAkBd;;;;wCAEe;AAChB;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAALA;AAAD,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,KAAvB;AACH,K,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA,aAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKF,KAAL,CAAWE,KAAX,CAAiBI,GAAjB,CAAqB,UAACC,IAAD,EAAOC,CAAP;AAAA,eACjB;AAAM,UAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaD,IAAI,CAACE,IAAlB,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkBF,IAAI,CAACG,QAAvB,CAFA,CADiB;AAAA,OAArB,CAFR,CAFR;AA0BH;;;;EAhIed,S;;AAoIpB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACV,KAAD;AAAA,SAAY;AAChCC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA;AADa,GAAZ;AAAA,CAAxB;;AAIA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import Layout from './layout'\r\nimport React, { Component } from 'react'\r\n// import Popup from \"reactjs-popup\"\r\nimport { connect } from \"react-redux\";\r\nimport {  fetchUsers } from \"../redux/actions/userActions\";\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            users: [],\r\n            // last_edited_user: null,\r\n            // showCreateUserForm: false,\r\n            // id: null,\r\n            // name: null,\r\n            // username: null,\r\n            // newUser: {\r\n            //     id: null,\r\n            //     name: null,\r\n            //     username: null\r\n            }\r\n        }\r\n\r\n    componentDidMount() {\r\n        // let {users} = this.props;\r\n        this.setState({users});\r\n        console.log(this.state.users)\r\n    }    \r\n\r\n    // static async getInitialProps(){\r\n    //     const res = await fetch('http://jsonplaceholder.typicode.com/users');\r\n    //     const data = await res.json();\r\n    //     return { users: data }\r\n    // }\r\n\r\n    // handleChange = (e, user) => {\r\n    //     user.username = e.target.value\r\n    //    // console.log( e.target.value )\r\n    //    this.setState({ last_edited_user: user })\r\n\r\n    // }\r\n    // deleteUser = (e, user, i) => {\r\n    //     const { users } = this.state\r\n    //     console.log(user.id)\r\n    //     users.splice(i, 1);\r\n    //     this.setState({ users: users })\r\n    // } \r\n\r\n    // handleCreatUser = (e) => {\r\n    //     //const { newUser } = this.state\r\n    //     this.setState({ [e.target.name] : e.target.value })\r\n        \r\n    //     const newUser = {\r\n    //         id: this.state.id,\r\n    //         name: this.state.name,\r\n    //         username: this.state.username\r\n    //     }\r\n\r\n    //     this.setState({ newUser : newUser })\r\n    // }\r\n\r\n    // buCreateUser = (event) => {\r\n    //     event.preventDefault();\r\n    //     const { newUser, users } = this.state\r\n    //     users.push(newUser)\r\n    //     this.setState({ users })\r\n    //     console.log(newUser)\r\n    //  }\r\n\r\n    render() {\r\n        \r\n        // let { users } = this.state\r\n        // console.log(users)\r\n        // return (\r\n        //     <Layout>\r\n        //     <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \r\n        //      <button onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } }> create new User </button>\r\n        //     { this.state.showCreateUserForm  && <form >\r\n        //        <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.handleCreatUser(e) }}  /><br></br>\r\n        //         <label >Name</label><input  type=\"text\" name=\"name\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\r\n        //         <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\r\n        //         <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreateUser } />\r\n        //        </form> }\r\n        //     </div>  \r\n        //         {\r\n        //                 users.map((user, i) => (\r\n        //                     <div  key={i} >\r\n        //                     <h3 >Name : {user.name} </h3>\r\n        //                     <h4 >User Name : {user.username}</h4>\r\n                        \r\n                            \r\n        //     <Popup trigger={<button >update user name</button>}\r\n        //         position=\"right center\">\r\n        //         <div>\r\n        //             <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\r\n        //         </div>\r\n        //             <button >save</button>\r\n        //     </Popup>\r\n\r\n        //     <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>    \r\n\r\n        //    </div>\r\n        //             ))\r\n        //         }\r\n        return(\r\n            \r\n                <div> \r\n                    {\r\n                        this.props.users.map((user, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >Name : {user.name} </h3>\r\n                            <h4 >User Name : {user.username}</h4>\r\n                           </div>\r\n                        ))\r\n                    }  \r\n\r\n                {/* <Popup trigger={<button >update user name</button>}\r\n                    position=\"right center\">\r\n                    <div>\r\n                        <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\r\n                    </div>\r\n                        <button >save</button>\r\n                </Popup>\r\n\r\n                <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>       */}\r\n                    \r\n                </div>\r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}