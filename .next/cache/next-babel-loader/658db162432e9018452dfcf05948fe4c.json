{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Comments from './comments';\nimport Link from 'next/link';\nimport Popup from \"reactjs-popup\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (e, post) => {\n      post.body = e.target.value;\n      this.setState({\n        updatedPost: post\n      });\n    });\n\n    _defineProperty(this, \"submitPost\", () => {\n      this.setState({\n        editOne: null\n      });\n    });\n\n    _defineProperty(this, \"deletePost\", (e, post, i) => {\n      //const {posts } = \n      console.log(post.id);\n      this.state.posts.splice(i, 1);\n    });\n\n    this.state = {\n      posts: [],\n      editOne: null,\n      updatedPost: null\n    };\n  }\n\n  componentDidMount() {\n    let {\n      posts\n    } = this.props;\n    this.setState({\n      posts\n    });\n  }\n\n  static async getInitialProps() {\n    const res = await fetch('http://jsonplaceholder.typicode.com/posts');\n    const data = await res.json();\n    return {\n      posts: data\n    };\n  }\n\n  updatePost(post) {\n    let {\n      editOne\n    } = this.state;\n    this.setState({\n      editOne: post.id\n    });\n  }\n\n  render() {\n    let {\n      editOne,\n      posts,\n      updatedPost\n    } = this.state;\n    console.log('uuuuuu', updatedPost);\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"150px\",\n        width: \"300px\",\n        height: \"120px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, posts.map((post, i) => __jsx(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, post.title, \" \"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, post.body), __jsx(Popup, {\n      trigger: __jsx(\"button\", {\n        onClick: () => this.updatePost(post),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"update\"),\n      position: \"right center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"textarea\", {\n      onChange: e => this.handleChange(e, post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, post.body)), __jsx(\"button\", {\n      onClick: this.submitPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"save\")), __jsx(\"button\", {\n      onClick: e => this.deletePost(e, post, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" delete \")))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/pages/index.js"],"names":["Fetch","React","Component","Layout","Comments","Link","Popup","Index","constructor","props","e","post","body","target","value","setState","updatedPost","editOne","i","console","log","id","state","posts","splice","componentDidMount","getInitialProps","res","fetch","data","json","updatePost","render","position","left","width","height","map","title","handleChange","submitPost","deletePost"],"mappings":"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","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from './comments'\r\nimport Link from 'next/link';\r\nimport Popup from \"reactjs-popup\"\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n            editOne: null,\r\n            updatedPost : null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne } = this.state;\r\n        this.setState({editOne : post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n     deletePost = (e, post, i) => {\r\n         //const {posts } = \r\n         console.log(post.id)\r\n         this.state.posts.splice(i, 1);\r\n     } \r\n\r\n    render() {\r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n                <div style={  {position : \"absolute\",\r\n            left:  \"150px\",\r\n            width: \"300px\",\r\n            height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        \r\n                            \r\n            <Popup trigger={<button onClick={() => this.updatePost(post)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, post)}>{post.body}</textarea>\r\n                        </div>\r\n                         <button  onClick={this.submitPost }>save</button>\r\n            </Popup>\r\n            <button onClick={ (e) => this.deletePost(e, post, i) }> delete </button>    \r\n                         </div>\r\n                        ))\r\n                    }\r\n                  </div>  \r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}