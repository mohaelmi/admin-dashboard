{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\"; // import PropTypes from 'prop-types'; \n\nimport { CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\nimport Userform from \"./userForm\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/List';\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, user) {\n      user.username = e.target.value;\n\n      _this.setState({\n        last_edited_user: user\n      });\n\n      console.log(_this.state.last_edited_user);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteUser\", function (e, user, i) {\n      console.log(i);\n      console.log(_this.props.users);\n\n      _this.props.users.splice(i, 1);\n\n      console.log(_this.props.users);\n\n      _this.setState({\n        users: _this.props.users\n      });\n\n      console.log(_this.state.users);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateUser\", function (e, user) {\n      _this.setState({\n        open: true\n      });\n\n      console.log(user.id);\n\n      _this.setState({\n        currentUserName: user.username\n      });\n\n      console.log(user);\n\n      _this.props.users.push(user);\n\n      _this.setState({\n        users: _this.props.users\n      });\n    });\n\n    _this.state = {\n      last_edited_user: null,\n      open: false,\n      setOpen: false,\n      currentUser: '',\n      users: null,\n      last_updated_user: null,\n      currentUserName: ''\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUsers(); //console.log(this.props.users)\n\n      this.setState({\n        users: this.props.users\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newUser) {\n        //console.log(nextProps.newUser)\n        this.props.users.unshift(nextProps.newUser);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Grid, {\n        container: true,\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.users.map(function (user, i) {\n        return __jsx(List, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, __jsx(ListItem, {\n          primaryText: \"name\",\n          secondaryText: user.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), __jsx(ListItem, {\n          primaryText: \"First Name\",\n          secondaryText: user.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), __jsx(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"edit\",\n          onClick: function onClick(e) {\n            return _this2.updateUser(e, user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, __jsx(EditIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        })), __jsx(Dialog, {\n          open: _this2.state.open,\n          onClose: _this2.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, __jsx(DialogTitle, {\n          id: \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"change user name \"), __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, __jsx(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, __jsx(TextField, {\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, user);\n          },\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"username\",\n          defaultValue: _this2.state.currentUserName,\n          type: \"text\",\n          fullWidth: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }))), __jsx(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, __jsx(Button, {\n          onClick: _this2.handleClose,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Cancel\"), __jsx(Button, {\n          onClick: _this2.handleClose,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"save\"))), __jsx(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          startIcon: __jsx(DeleteIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }),\n          onClick: function onClick(e) {\n            return _this2.deleteUser(e, user, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Delete\"));\n      })), __jsx(Grid, {\n        item: true,\n        sm: true,\n        bgcolor: \"e0e0e0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, __jsx(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        m: 1,\n        bgcolor: \"#e0e0e0\",\n        height: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, __jsx(Userform, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users.users,\n    newUser: state.users.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers: fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["React","Component","connect","CreateUsers","fetchUsers","Userform","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddIcon","EditIcon","DeleteIcon","Fab","Grid","Box","List","ListItem","Users","props","e","user","username","target","value","setState","last_edited_user","console","log","state","i","users","splice","open","id","currentUserName","push","setOpen","currentUser","last_updated_user","nextProps","newUser","unshift","marginTop","map","name","updateUser","handleClose","handleChange","deleteUser","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\n// import PropTypes from 'prop-types'; \r\nimport {  CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\r\nimport  Userform  from \"./userForm\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/List'\r\n\r\n\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            last_edited_user: null,\r\n            open: false, \r\n            setOpen: false,\r\n            currentUser: '',\r\n            users: null,\r\n            last_updated_user: null,\r\n            currentUserName: ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUsers();\r\n        //console.log(this.props.users)\r\n         this.setState({ users: this.props.users })\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newUser){\r\n            //console.log(nextProps.newUser)\r\n            this.props.users.unshift(nextProps.newUser)\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e, user) => {\r\n        user.username = e.target.value\r\n       this.setState({ last_edited_user: user })\r\n       console.log(this.state.last_edited_user)\r\n\r\n    }\r\n    deleteUser = (e, user, i) => {\r\n        console.log(i)\r\n        console.log(this.props.users)\r\n        this.props.users.splice(i, 1)\r\n        console.log(this.props.users)\r\n        this.setState({users: this.props.users })\r\n        console.log(this.state.users)\r\n\r\n    \r\n    } \r\n\r\n    \r\n     handleClose = () => {\r\n        this.setState({ open: false }) \r\n      };\r\n\r\n      updateUser = (e, user) => {\r\n        this.setState({ open: true })\r\n        console.log(user.id)\r\n        this.setState({ currentUserName: user.username })\r\n        console.log(user)\r\n        this.props.users.push(user)\r\n        this.setState({users: this.props.users })\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            \r\n                \r\n        <Grid container style={{ marginTop: 50}}>\r\n            <Grid item sm ={ 8   }>\r\n                \r\n            {\r\n                this.props.users.map((user, i) => (\r\n                   \r\n                    <List  key = {i}>\r\n                    <ListItem \r\n                       primaryText = \"name\" secondaryText = {user.name} \r\n                    />\r\n\r\n                    <ListItem  \r\n                       primaryText = \"First Name\" secondaryText = {user.username} \r\n                    />\r\n                    \r\n                <Fab color=\"primary\" aria-label=\"edit\" onClick={(e) => this.updateUser(e, user)}>\r\n                    <EditIcon />\r\n                </Fab>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">change user name </DialogTitle>\r\n                    <div >\r\n                    <DialogContent>\r\n                        <TextField onChange={(e) =>  this.handleChange(e, user)}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"username\"\r\n                            defaultValue={ this.state.currentUserName }\r\n                            type=\"text\"\r\n                            fullWidth\r\n                           \r\n                        />\r\n\r\n                        \r\n                    </DialogContent>\r\n                    </div>\r\n                    <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={ this.handleClose} color=\"primary\">\r\n                        save\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick = { (e)=> this.deleteUser(e, user, i) }\r\n                    >\r\n                    Delete\r\n                    </Button>\r\n                </List>   \r\n                            ))\r\n                        } \r\n                    </Grid> \r\n                     <Grid item sm bgcolor=\"e0e0e0\">\r\n                        <Box   component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"#e0e0e0\" height= '100%'>\r\n                        <Userform   />\r\n                        </Box>\r\n                     </Grid>\r\n                </Grid>\r\n                                \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}