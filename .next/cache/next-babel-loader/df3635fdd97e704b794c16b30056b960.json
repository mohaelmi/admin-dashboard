{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\pages\\\\comments.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Popup from \"reactjs-popup\";\n\nclass Commonts extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (e, comment) => {\n      comment.body = e.target.value;\n      this.setState({\n        updatedComment: comment\n      });\n    });\n\n    _defineProperty(this, \"submitComment\", () => {\n      this.setState({\n        editOne: null\n      });\n    });\n\n    _defineProperty(this, \"deleteComment\", (e, comment, i) => {\n      const {\n        comments\n      } = this.state;\n      console.log(comment.id);\n      comments.splice(i, 1);\n      this.setState({\n        comments\n      });\n    });\n\n    this.state = {\n      comments: [],\n      editOne: null,\n      updatedComment: null\n    };\n  }\n\n  componentDidMount() {\n    let {\n      comments\n    } = this.props;\n    this.setState({\n      comments: comments\n    });\n  }\n\n  updateComment(comment) {\n    this.setState({\n      editOne: comment.id\n    });\n  }\n\n  static async getInitialProps() {\n    const res = await fetch('http://jsonplaceholder.typicode.com/comments');\n    const data = await res.json();\n    console.log(data);\n    return {\n      comments: data\n    };\n  }\n\n  render() {\n    console.log(this.state.comments);\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"300px\",\n        height: \"120px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.comments.length > 0 && this.state.comments.map((comment, i) => __jsx(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", comment.body, \" \", __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), __jsx(Popup, {\n      trigger: __jsx(\"button\", {\n        onClick: () => this.updateComment(comment),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"update\"),\n      position: \"right center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"textarea\", {\n      onChange: e => this.handleChange(e, comment),\n      style: {\n        padding: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, comment.body)), __jsx(\"button\", {\n      onClick: this.submitComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"save\")), __jsx(\"button\", {\n      onClick: e => this.deleteComment(e, comment, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" delete \")))));\n  }\n\n}\n\nexport default Commonts;","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/pages/comments.js"],"names":["React","Component","Layout","Popup","Commonts","constructor","props","e","comment","body","target","value","setState","updatedComment","editOne","i","comments","state","console","log","id","splice","componentDidMount","updateComment","getInitialProps","res","fetch","data","json","render","position","width","height","length","map","handleChange","padding","submitComment","deleteComment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CAqBJ,CAACC,CAAD,EAAIC,OAAJ,KAAgB;AAC3BA,MAAAA,OAAO,CAACC,IAAR,GAAeF,CAAC,CAACG,MAAF,CAASC,KAAxB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEL;AAAjB,OAAd;AACH,KAxBkB;;AAAA,2CA0BH,MAAM;AAClB,WAAKI,QAAL,CAAc;AAAGE,QAAAA,OAAO,EAAE;AAAZ,OAAd;AACF,KA5BiB;;AAAA,2CA8BH,CAACP,CAAD,EAAIC,OAAJ,EAAaO,CAAb,KAAmB;AAC/B,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACY,EAApB;AACAJ,MAAAA,QAAQ,CAACK,MAAT,CAAgBN,CAAhB,EAAmB,CAAnB;AACA,WAAKH,QAAL,CAAc;AAAEI,QAAAA;AAAF,OAAd;AACH,KAnCkB;;AAGf,SAAKC,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAETF,MAAAA,OAAO,EAAE,IAFA;AAGTD,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH;;AAGDS,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AAACN,MAAAA;AAAD,QAAa,KAAKV,KAAtB;AACA,SAAKM,QAAL,CAAc;AAACI,MAAAA,QAAQ,EAAEA;AAAX,KAAd;AAEH;;AAEDO,EAAAA,aAAa,CAACf,OAAD,EAAU;AACnB,SAAKI,QAAL,CAAc;AAACE,MAAAA,OAAO,EAAGN,OAAO,CAACY;AAAnB,KAAd;AACH;;AAoBD,eAAaI,eAAb,GAA8B;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACA,WAAO;AAAEX,MAAAA,QAAQ,EAAEW;AAAZ,KAAP;AAEH;;AAEDE,EAAAA,MAAM,GAAG;AACLX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,QAAvB;AACA,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAI;AAACc,QAAAA,QAAQ,EAAG,UAAZ;AAAwBC,QAAAA,KAAK,EAAE,OAA/B;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKf,KAAL,CAAWD,QAAX,CAAoBiB,MAApB,GAA6B,CAA7B,IAAmC,KAAKhB,KAAL,CAAWD,QAAX,CAAoBkB,GAApB,CAAwB,CAAC1B,OAAD,EAAUO,CAAV,KACvD;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgBP,OAAO,CAACC,IAAxB,OAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,EACJ,MAAC,KAAD;AAAO,MAAA,OAAO,EAAE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKc,aAAL,CAAmBf,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB;AACI,MAAA,QAAQ,EAAC,cADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,QAAQ,EAAGD,CAAD,IAAO,KAAK4B,YAAL,CAAkB5B,CAAlB,EAAqBC,OAArB,CAA3B;AAA0D,MAAA,KAAK,EAAI;AAAC4B,QAAAA,OAAO,EAAE;AAAV,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyF5B,OAAO,CAACC,IAAjG,CADJ,CAFJ,EAKI;AAAS,MAAA,OAAO,EAAE,KAAK4B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADI,EAQH;AAAQ,MAAA,OAAO,EAAI9B,CAAD,IAAO,KAAK+B,aAAL,CAAmB/B,CAAnB,EAAsBC,OAAtB,EAA+BO,CAA/B,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARG,CAD+B,CAFvC,CAFJ,CADJ;AAsBH;;AAxE4B;;AA2EjC,eAAeX,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Popup from \"reactjs-popup\"\r\n\r\n\r\nclass Commonts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            comments: [],\r\n            editOne: null,\r\n            updatedComment: null\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        let {comments} = this.props;\r\n        this.setState({comments: comments});\r\n        \r\n    }  \r\n\r\n    updateComment(comment) {\r\n        this.setState({editOne : comment.id});\r\n    }\r\n\r\n    handleChange = (e, comment) => {\r\n        comment.body = e.target.value;\r\n        this.setState({updatedComment: comment});\r\n    }\r\n\r\n    submitComment = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n    deleteComment = (e, comment, i) => {\r\n        const { comments } = this.state\r\n        console.log(comment.id)\r\n        comments.splice(i, 1);\r\n        this.setState({ comments })\r\n    } \r\n\r\n\r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/comments');\r\n        const data = await res.json();\r\n        console.log(data)\r\n        return { comments: data }\r\n    \r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.comments)\r\n        return (\r\n            <Layout>\r\n                \r\n                <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\"}   }>\r\n                  { \r\n                    this.state.comments.length > 0 &&  this.state.comments.map((comment, i) => (\r\n                        <div key={i}> { comment.body } <div/>\r\n                    <Popup trigger={<button onClick={() => this.updateComment(comment)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, comment)} style={  {padding: '40px'}  }>{comment.body}</textarea>\r\n                        </div>\r\n                        <button  onClick={this.submitComment }>save</button>\r\n                   </Popup>\r\n                     <button onClick={ (e) => this.deleteComment(e, comment, i) }> delete </button>\r\n                     </div>\r\n                     ))\r\n                 }\r\n                </div>\r\n                \r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Commonts"]},"metadata":{},"sourceType":"module"}