{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\"; // import PropTypes from 'prop-types'; \n\nimport { CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\nimport Userform from \"./userForm\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-u/core/List';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (e, user) => {\n      user.username = e.target.value;\n      this.setState({\n        last_edited_user: user\n      });\n      console.log(this.state.last_edited_user);\n    });\n\n    _defineProperty(this, \"deleteUser\", (e, user, i) => {\n      console.log(i);\n      console.log(this.props.users);\n      this.props.users.splice(i, 1);\n      console.log(this.props.users);\n      this.setState({\n        users: this.props.users\n      });\n      console.log(this.state.users);\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(this, \"updateUser\", (e, user) => {\n      this.setState({\n        open: true\n      });\n      console.log(user.id);\n      this.setState({\n        currentUserName: user.username\n      });\n      console.log(user);\n      this.props.users.push(user);\n      this.setState({\n        users: this.props.users\n      });\n    });\n\n    this.state = {\n      last_edited_user: null,\n      open: false,\n      setOpen: false,\n      currentUser: '',\n      users: null,\n      last_updated_user: null,\n      currentUserName: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUsers(); //console.log(this.props.users)\n\n    this.setState({\n      users: this.props.users\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newUser) {\n      //console.log(nextProps.newUser)\n      this.props.users.unshift(nextProps.newUser);\n    }\n  }\n\n  render() {\n    return __jsx(Grid, {\n      container: true,\n      style: {\n        marginTop: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.users.map((user, i) => __jsx(List, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(ListItem, {\n      primaryText: \"name\",\n      secondaryText: user.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), __jsx(ListItem, {\n      primaryText: \"First Name\",\n      secondaryText: user.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), __jsx(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"edit\",\n      onClick: e => this.updateUser(e, user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), __jsx(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"change user name \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(TextField, {\n      onChange: e => this.handleChange(e, user),\n      autoFocus: true,\n      margin: \"dense\",\n      name: \"username\",\n      defaultValue: this.state.currentUserName,\n      type: \"text\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), __jsx(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Cancel\"), __jsx(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"save\"))), __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      startIcon: __jsx(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }),\n      onClick: e => this.deleteUser(e, user, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Delete\")))), __jsx(Grid, {\n      item: true,\n      sm: true,\n      bgcolor: \"e0e0e0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(Box, {\n      component: \"span\",\n      display: \"block\",\n      p: 1,\n      m: 1,\n      bgcolor: \"#e0e0e0\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(Userform, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.users,\n  newUser: state.users.user\n});\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["React","Component","connect","CreateUsers","fetchUsers","Userform","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddIcon","EditIcon","DeleteIcon","Fab","Grid","Box","ListItem","Users","constructor","props","e","user","username","target","value","setState","last_edited_user","console","log","state","i","users","splice","open","id","currentUserName","push","setOpen","currentUser","last_updated_user","componentDidMount","componentWillReceiveProps","nextProps","newUser","unshift","render","marginTop","map","name","updateUser","handleClose","handleChange","deleteUser","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAAUC,WAAV,EAAuBC,UAAvB,QAAyC,8BAAzC;AACA,OAAQC,QAAR,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAQC,QAAR,MAAsB,uBAAtB;;AAKA,MAAMC,KAAN,SAAoBnB,SAApB,CAA8B;AAC1BoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CA6BJ,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACxBA,MAAAA,IAAI,CAACC,QAAL,GAAgBF,CAAC,CAACG,MAAF,CAASC,KAAzB;AACD,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEL;AAApB,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,gBAAvB;AAEF,KAlCkB;;AAAA,wCAmCN,CAACN,CAAD,EAAIC,IAAJ,EAAUS,CAAV,KAAgB;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWY,KAAvB;AACA,WAAKZ,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBF,CAAxB,EAA2B,CAA3B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWY,KAAvB;AACA,WAAKN,QAAL,CAAc;AAACM,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY;AAAnB,OAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,KAAvB;AAGH,KA5CkB;;AAAA,yCA+CJ,MAAM;AACjB,WAAKN,QAAL,CAAc;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAjDgB;;AAAA,wCAmDJ,CAACb,CAAD,EAAIC,IAAJ,KAAa;AACxB,WAAKI,QAAL,CAAc;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACa,EAAjB;AACA,WAAKT,QAAL,CAAc;AAAEU,QAAAA,eAAe,EAAEd,IAAI,CAACC;AAAxB,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,WAAKF,KAAL,CAAWY,KAAX,CAAiBK,IAAjB,CAAsBf,IAAtB;AACA,WAAKI,QAAL,CAAc;AAACM,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY;AAAnB,OAAd;AACD,KA1DgB;;AAEf,SAAKF,KAAL,GAAa;AACTH,MAAAA,gBAAgB,EAAE,IADT;AAETO,MAAAA,IAAI,EAAE,KAFG;AAGTI,MAAAA,OAAO,EAAE,KAHA;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTP,MAAAA,KAAK,EAAE,IALE;AAMTQ,MAAAA,iBAAiB,EAAE,IANV;AAOTJ,MAAAA,eAAe,EAAE;AAPR,KAAb;AAUH;;AAGDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,KAAL,CAAWlB,UAAX,GADgB,CAEhB;;AACC,SAAKwB,QAAL,CAAc;AAAEM,MAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY;AAApB,KAAd;AACJ;;AAEDU,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACC,OAAb,EAAqB;AACjB;AACA,WAAKxB,KAAL,CAAWY,KAAX,CAAiBa,OAAjB,CAAyBF,SAAS,CAACC,OAAnC;AACH;AACJ;;AAkCDE,EAAAA,MAAM,GAAG;AACL,WAGA,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAI,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,KAAK3B,KAAL,CAAWY,KAAX,CAAiBgB,GAAjB,CAAqB,CAAC1B,IAAD,EAAOS,CAAP,KAEjB,MAAC,IAAD;AAAO,MAAA,GAAG,EAAIA,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,QAAD;AACG,MAAA,WAAW,EAAG,MADjB;AACwB,MAAA,aAAa,EAAIT,IAAI,CAAC2B,IAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAKA,MAAC,QAAD;AACG,MAAA,WAAW,EAAG,YADjB;AAC8B,MAAA,aAAa,EAAI3B,IAAI,CAACC,QADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EASJ,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,oBAAW,MAAhC;AAAuC,MAAA,OAAO,EAAGF,CAAD,IAAO,KAAK6B,UAAL,CAAgB7B,CAAhB,EAAmBC,IAAnB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATI,EAYJ,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWI,IAAzB;AAA+B,MAAA,OAAO,EAAE,KAAKiB,WAA7C;AAA0D,yBAAgB,mBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAG9B,CAAD,IAAQ,KAAK+B,YAAL,CAAkB/B,CAAlB,EAAqBC,IAArB,CAA7B;AACI,MAAA,SAAS,MADb;AAEI,MAAA,MAAM,EAAC,OAFX;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,YAAY,EAAG,KAAKQ,KAAL,CAAWM,eAJ9B;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,CAFJ,EAiBI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKe,WAAtB;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAIA,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAG,KAAKA,WAAvB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,CAjBJ,CAZI,EAsCJ,MAAC,MAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,SAAS,EAAE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHf;AAII,MAAA,OAAO,EAAM9B,CAAD,IAAM,KAAKgC,UAAL,CAAgBhC,CAAhB,EAAmBC,IAAnB,EAAyBS,CAAzB,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCI,CAFJ,CAHJ,CADJ,EAwDa,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAc,MAAA,OAAO,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MAAC,GAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,OAAO,EAAC,OAAhC;AAAwC,MAAA,CAAC,EAAE,CAA3C;AAA8C,MAAA,CAAC,EAAE,CAAjD;AAAoD,MAAA,OAAO,EAAC,SAA5D;AAAsE,MAAA,MAAM,EAAE,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADH,CAxDb,CAHA;AAqEH;;AAnIyB;;AAuI9B,MAAMuB,eAAe,GAAIxB,KAAD,KAAY;AAChCE,EAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYA,KADa;AAEhCY,EAAAA,OAAO,EAAEd,KAAK,CAACE,KAAN,CAAYV;AAFW,CAAZ,CAAxB;;AAKA,eAAetB,OAAO,CAACsD,eAAD,EAAkB;AAACpD,EAAAA;AAAD,CAAlB,CAAP,CAAuCgB,KAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\n// import PropTypes from 'prop-types'; \r\nimport {  CreateUsers, fetchUsers } from \"../redux/actions/userActions\";\r\nimport  Userform  from \"./userForm\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport  ListItem from '@material-u/core/List'\r\n\r\n\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            last_edited_user: null,\r\n            open: false, \r\n            setOpen: false,\r\n            currentUser: '',\r\n            users: null,\r\n            last_updated_user: null,\r\n            currentUserName: ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUsers();\r\n        //console.log(this.props.users)\r\n         this.setState({ users: this.props.users })\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newUser){\r\n            //console.log(nextProps.newUser)\r\n            this.props.users.unshift(nextProps.newUser)\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e, user) => {\r\n        user.username = e.target.value\r\n       this.setState({ last_edited_user: user })\r\n       console.log(this.state.last_edited_user)\r\n\r\n    }\r\n    deleteUser = (e, user, i) => {\r\n        console.log(i)\r\n        console.log(this.props.users)\r\n        this.props.users.splice(i, 1)\r\n        console.log(this.props.users)\r\n        this.setState({users: this.props.users })\r\n        console.log(this.state.users)\r\n\r\n    \r\n    } \r\n\r\n    \r\n     handleClose = () => {\r\n        this.setState({ open: false }) \r\n      };\r\n\r\n      updateUser = (e, user) => {\r\n        this.setState({ open: true })\r\n        console.log(user.id)\r\n        this.setState({ currentUserName: user.username })\r\n        console.log(user)\r\n        this.props.users.push(user)\r\n        this.setState({users: this.props.users })\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            \r\n                \r\n        <Grid container style={{ marginTop: 50}}>\r\n            <Grid item sm ={ 8   }>\r\n                \r\n            {\r\n                this.props.users.map((user, i) => (\r\n                   \r\n                    <List  key = {i}>\r\n                    <ListItem \r\n                       primaryText = \"name\" secondaryText = {user.name} \r\n                    />\r\n\r\n                    <ListItem  \r\n                       primaryText = \"First Name\" secondaryText = {user.username} \r\n                    />\r\n                    \r\n                <Fab color=\"primary\" aria-label=\"edit\" onClick={(e) => this.updateUser(e, user)}>\r\n                    <EditIcon />\r\n                </Fab>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">change user name </DialogTitle>\r\n                    <div >\r\n                    <DialogContent>\r\n                        <TextField onChange={(e) =>  this.handleChange(e, user)}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"username\"\r\n                            defaultValue={ this.state.currentUserName }\r\n                            type=\"text\"\r\n                            fullWidth\r\n                           \r\n                        />\r\n\r\n                        \r\n                    </DialogContent>\r\n                    </div>\r\n                    <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={ this.handleClose} color=\"primary\">\r\n                        save\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick = { (e)=> this.deleteUser(e, user, i) }\r\n                    >\r\n                    Delete\r\n                    </Button>\r\n                </List>   \r\n                            ))\r\n                        } \r\n                    </Grid> \r\n                     <Grid item sm bgcolor=\"e0e0e0\">\r\n                        <Box   component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"#e0e0e0\" height= '100%'>\r\n                        <Userform   />\r\n                        </Box>\r\n                     </Grid>\r\n                </Grid>\r\n                                \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}