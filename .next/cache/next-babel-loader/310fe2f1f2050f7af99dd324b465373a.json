{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Comments from './comments';\nimport Link from 'next/link';\nimport Popup from \"reactjs-popup\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, post) {\n      post.body = e.target.value;\n\n      _this.setState({\n        updatedPost: post\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitPost\", function () {\n      _this.setState({\n        editOne: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deletePost\", function (e, post, i) {\n      var posts = _this.state.posts;\n      console.log(post.id);\n      posts.splice(i, 1);\n\n      _this.setState({\n        posts: posts\n      });\n    });\n\n    _this.state = {\n      posts: [],\n      editOne: null,\n      updatedPost: null,\n      showCreatePostForm: false\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var posts = this.props.posts;\n      this.setState({\n        posts: posts\n      });\n    }\n  }, {\n    key: \"updatePost\",\n    value: function updatePost(post) {\n      var editOne = this.state.editOne;\n      this.setState({\n        editOne: post.id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          editOne = _this$state.editOne,\n          posts = _this$state.posts,\n          updatedPost = _this$state.updatedPost;\n      console.log('uuuuuu', updatedPost);\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          position: \"absolute\",\n          width: \"300px\",\n          height: \"120px\",\n          right: '500'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" create new post \"), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Describtion\", __jsx(\"span\", {\n        className: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"*\")), __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"title\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), __jsx(\"textarea\", {\n        name: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        style: {\n          position: \"absolute\",\n          width: \"300px\",\n          height: \"120px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, posts.map(function (post, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, __jsx(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, post.title, \" \"), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, post.body), __jsx(Popup, {\n          trigger: __jsx(\"button\", {\n            onClick: function onClick() {\n              return _this2.updatePost(post);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"update\"),\n          position: \"right center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, __jsx(\"textarea\", {\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, post.body)), __jsx(\"button\", {\n          onClick: _this2.submitPost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"save\")), __jsx(\"button\", {\n          onClick: function onClick(e) {\n            return _this2.deletePost(e, post, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \" delete \"));\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://jsonplaceholder.typicode.com/posts'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                posts: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/pages/index.js"],"names":["Fetch","React","Component","Layout","Comments","Link","Popup","Index","props","e","post","body","target","value","setState","updatedPost","editOne","i","posts","state","console","log","id","splice","showCreatePostForm","position","width","height","right","map","title","updatePost","handleChange","submitPost","deletePost","fetch","res","json","data"],"mappings":"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","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from './comments'\r\nimport Link from 'next/link';\r\nimport Popup from \"reactjs-popup\"\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n            editOne: null,\r\n            updatedPost : null,\r\n            showCreatePostForm: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne } = this.state;\r\n        this.setState({editOne : post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n     deletePost = (e, post, i) => {\r\n         const { posts } = this.state\r\n         console.log(post.id)\r\n         posts.splice(i, 1);\r\n         this.setState({ posts: posts })\r\n     } \r\n\r\n    render() {\r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n            <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", right: '500'}  }>   \r\n            <button > create new post </button>\r\n            <form>\r\n                <label>Describtion<span className=\"required\">*</span></label>\r\n                <label>title</label><input  type=\"text\" name=\"title\"  />\r\n                <textarea name=\"body\" ></textarea>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            </div>\r\n                <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        \r\n                            \r\n            <Popup trigger={<button onClick={() => this.updatePost(post)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, post)}>{post.body}</textarea>\r\n                        </div>\r\n                         <button  onClick={this.submitPost }>save</button>\r\n            </Popup>\r\n            <button onClick={ (e) => this.deletePost(e, post, i) }> delete </button>\r\n                         </div>\r\n                        ))\r\n                    }\r\n                  </div>  \r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}