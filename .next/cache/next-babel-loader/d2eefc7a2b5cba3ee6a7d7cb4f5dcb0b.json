{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\users.js\";\nvar __jsx = React.createElement;\nimport Layout from './layout';\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { fetchUsers } from \"../redux/actions/userActions\";\nimport Userform from \"./userForm\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, user) {\n      user.username = e.target.value; //console.log( user )\n\n      var last_edited_user = user;\n      console.log(last_edited_user);\n    });\n\n    _this.state = {}; // this.state = {\n    //     users: [],\n    //     last_edited_user: null,\n    //     showCreateUserForm: false,\n    //     id: null,\n    //     name: null,\n    //     username: null,\n    //     newUser: {\n    //         id: null,\n    //         name: null,\n    //         username: null\n    //     }\n\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(nextProps) {\n      // let {users} = this.props;\n      // this.setState({users});\n      this.props.fetchUsers();\n      console.log(this.props.users);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newUser) {\n        console.log(nextProps.newUser);\n        this.props.users.push(nextProps.newUser);\n      }\n    } // static async getInitialProps(){\n    //     const res = await fetch('http://jsonplaceholder.typicode.com/users');\n    //     const data = await res.json();\n    //     return { users: data }\n    // }\n\n  }, {\n    key: \"render\",\n    // deleteUser = (e, user, i) => {\n    //     const { users } = this.state\n    //     console.log(user.id)\n    //     users.splice(i, 1);\n    //     this.setState({ users: users })\n    // } \n    // handleCreatUser = (e) => {\n    //     //const { newUser } = this.state\n    //     this.setState({ [e.target.name] : e.target.value })\n    //     const newUser = {\n    //         id: this.state.id,\n    //         name: this.state.name,\n    //         username: this.state.username\n    //     }\n    //     this.setState({ newUser : newUser })\n    // }\n    // buCreateUser = (event) => {\n    //     event.preventDefault();\n    //     const { newUser, users } = this.state\n    //     users.push(newUser)\n    //     this.setState({ users })\n    //     console.log(newUser)\n    //  }\n    value: function render() {\n      var _this2 = this;\n\n      // let { users } = this.state\n      // console.log(users)\n      // return (\n      //     <Layout>\n      //     <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \n      //      <button onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } }> create new User </button>\n      //     { this.state.showCreateUserForm  && <form >\n      //        <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.handleCreatUser(e) }}  /><br></br>\n      //         <label >Name</label><input  type=\"text\" name=\"name\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\n      //         <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\n      //         <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreateUser } />\n      //        </form> }\n      //     </div>  \n      //         {\n      //                 users.map((user, i) => (\n      //                     <div  key={i} >\n      //                     <h3 >Name : {user.name} </h3>\n      //                     <h4 >User Name : {user.username}</h4>\n      //     <Popup trigger={<button >update user name</button>}\n      //         position=\"right center\">\n      //         <div>\n      //             <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\n      //         </div>\n      //             <button >save</button>\n      //     </Popup>\n      //     <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>    \n      //    </div>\n      //             ))\n      //         }\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(Userform, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), this.props.users.map(function (user, i) {\n        return __jsx(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, __jsx(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Name : \", user.name, \" \"), __jsx(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"User Name : \", user.username), __jsx(Popup, {\n          trigger: __jsx(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"update user name\"),\n          position: \"right center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, __jsx(\"textarea\", {\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, user.username)), __jsx(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"save\")), __jsx(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \" delete user\"));\n      }));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nUsers.PropTypes = {\n  fetchUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  newUser: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users.users,\n    newUser: state.users.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers: fetchUsers\n})(Users);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/users.js"],"names":["Layout","React","Component","Popup","connect","PropTypes","fetchUsers","Userform","Users","props","e","user","username","target","value","last_edited_user","console","log","state","nextProps","users","newUser","push","map","i","name","handleChange","func","isRequired","array","object","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from './layout'\r\nimport React, { Component } from 'react'\r\nimport Popup from \"reactjs-popup\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport {  fetchUsers } from \"../redux/actions/userActions\";\r\nimport  Userform  from \"./userForm\";\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n\r\n        // this.state = {\r\n        //     users: [],\r\n        //     last_edited_user: null,\r\n        //     showCreateUserForm: false,\r\n        //     id: null,\r\n        //     name: null,\r\n        //     username: null,\r\n        //     newUser: {\r\n        //         id: null,\r\n        //         name: null,\r\n        //         username: null\r\n        //     }\r\n        }\r\n\r\n    componentDidMount(nextProps) {\r\n        // let {users} = this.props;\r\n        // this.setState({users});\r\n        this.props.fetchUsers();\r\n        console.log(this.props.users)\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newUser){\r\n            console.log(nextProps.newUser)\r\n            this.props.users.push(nextProps.newUser)\r\n        }\r\n    }\r\n\r\n    // static async getInitialProps(){\r\n    //     const res = await fetch('http://jsonplaceholder.typicode.com/users');\r\n    //     const data = await res.json();\r\n    //     return { users: data }\r\n    // }\r\n\r\n    handleChange = (e, user) => {\r\n        user.username = e.target.value\r\n       //console.log( user )\r\n       const  last_edited_user = user\r\n       console.log(last_edited_user)\r\n\r\n\r\n    }\r\n    // deleteUser = (e, user, i) => {\r\n    //     const { users } = this.state\r\n    //     console.log(user.id)\r\n    //     users.splice(i, 1);\r\n    //     this.setState({ users: users })\r\n    // } \r\n\r\n    // handleCreatUser = (e) => {\r\n    //     //const { newUser } = this.state\r\n    //     this.setState({ [e.target.name] : e.target.value })\r\n        \r\n    //     const newUser = {\r\n    //         id: this.state.id,\r\n    //         name: this.state.name,\r\n    //         username: this.state.username\r\n    //     }\r\n\r\n    //     this.setState({ newUser : newUser })\r\n    // }\r\n\r\n    // buCreateUser = (event) => {\r\n    //     event.preventDefault();\r\n    //     const { newUser, users } = this.state\r\n    //     users.push(newUser)\r\n    //     this.setState({ users })\r\n    //     console.log(newUser)\r\n    //  }\r\n\r\n    render() {\r\n        \r\n        // let { users } = this.state\r\n        // console.log(users)\r\n        // return (\r\n        //     <Layout>\r\n        //     <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \r\n        //      <button onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } }> create new User </button>\r\n        //     { this.state.showCreateUserForm  && <form >\r\n        //        <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.handleCreatUser(e) }}  /><br></br>\r\n        //         <label >Name</label><input  type=\"text\" name=\"name\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\r\n        //         <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}   />\r\n        //         <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreateUser } />\r\n        //        </form> }\r\n        //     </div>  \r\n        //         {\r\n        //                 users.map((user, i) => (\r\n        //                     <div  key={i} >\r\n        //                     <h3 >Name : {user.name} </h3>\r\n        //                     <h4 >User Name : {user.username}</h4>\r\n                        \r\n                            \r\n        //     <Popup trigger={<button >update user name</button>}\r\n        //         position=\"right center\">\r\n        //         <div>\r\n        //             <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\r\n        //         </div>\r\n        //             <button >save</button>\r\n        //     </Popup>\r\n\r\n        //     <button onClick={ (e) => this.deleteUser(e, user, i) }> delete user</button>    \r\n\r\n        //    </div>\r\n        //             ))\r\n        //         }\r\n        return(\r\n            \r\n                <div> \r\n                <Userform />\r\n                    {\r\n                        this.props.users.map((user, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >Name : {user.name} </h3>\r\n                            <h4 >User Name : {user.username}</h4>\r\n                           \r\n                <Popup trigger={<button >update user name</button>}\r\n                    position=\"right center\">\r\n                    <div>\r\n                     <textarea onChange={(e) =>  this.handleChange(e, user) }>{user.username}</textarea>\r\n                    </div>\r\n                        <button >save</button>\r\n                </Popup>\r\n\r\n                <button > delete user</button>\r\n                </div>    \r\n                ))\r\n            }  \r\n            </div>\r\n                    \r\n                      \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nUsers.PropTypes = {\r\n    fetchUsers: PropTypes.func.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    newUser: PropTypes.object \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users)"]},"metadata":{},"sourceType":"module"}