{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\posts.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../redux/actions/postactions\";\nimport Layout from '../components/layout';\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts(props) {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Posts, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"sdasdasds\"))));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.users.posts // newUser: state.users.user\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Posts);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/posts.js"],"names":["React","Component","connect","fetchPosts","Layout","Provider","store","Posts","props","state","mapStateToProps","posts","users"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAWC,UAAX,QAA8B,8BAA9B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAQC,KAAR,MAAoB,gBAApB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,EAAb;AAHe;AAMlB;;;;6BAEQ;AACL,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAGH,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADR,CAHA,CADA,CADJ;AAWH;;;;EArBeL,S;;AAwBpB,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACD,KAAD;AAAA,SAAY;AAChCE,IAAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYD,KADa,CAEhC;;AAFgC,GAAZ;AAAA,CAAxB;;AAKA,eAAeT,OAAO,CAACQ,eAAD,EAAkB;AAACP,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCI,KAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport   { fetchPosts }  from \"../redux/actions/postactions\";\r\n\r\nimport Layout from '../components/layout'\r\nimport { Provider } from \"react-redux\";\r\nimport  store  from \"../redux/store\";\r\n\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={ store } >\r\n            <Layout>\r\n                \r\n            \r\n            <div> \r\n                    <h1>sdasdasds</h1>\r\n            </div>\r\n            </Layout>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.users.posts,\r\n    // newUser: state.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchPosts})(Posts)\r\n"]},"metadata":{},"sourceType":"module"}