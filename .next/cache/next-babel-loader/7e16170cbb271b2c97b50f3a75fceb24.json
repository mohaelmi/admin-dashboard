{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\sitekey\\\\Desktop\\\\admin-dashboard\\\\components\\\\posts.js\";\nvar __jsx = React.createElement;\nimport Layout from './layout';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../redux/actions/postActions\";\nimport PostForm from \"./postForm\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts(props) {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, post) {\n      post.body = e.target.value;\n\n      _this.setState({\n        last_edited_post: post\n      });\n\n      console.log(_this.state.last_edited_post);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deletePost\", function (e, post, i) {\n      console.log(i);\n      console.log(_this.props.posts);\n\n      _this.props.posts.splice(i, 1);\n\n      console.log(_this.props.posts);\n\n      _this.setState({\n        posts: _this.props.users\n      });\n\n      console.log(_this.state.users);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePost\", function (e, post) {\n      _this.setState({\n        open: true\n      });\n\n      console.log(post.id);\n\n      _this.setState({\n        currentPostBody: post.body\n      });\n\n      console.log(post);\n\n      _this.props.posts.push(post);\n\n      _this.setState({\n        posts: _this.props.posts\n      });\n    });\n\n    _this.state = {\n      posts: [],\n      currentPostBody: '',\n      last_edited_post: null,\n      open: false,\n      setOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchPosts();\n      console.log(this.props.posts);\n      this.setState({\n        posts: this.props.posts\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newPost) {\n        console.log(nextProps.newPost);\n        this.props.posts.unshift(nextProps.newPost);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Grid, {\n        container: true,\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.props.posts.map(function (post, i) {\n        return __jsx(Box, {\n          key: i,\n          component: \"span\",\n          display: \"block\",\n          p: 1,\n          m: 1,\n          bgcolor: \"#e0e0e0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, __jsx(Box, {\n          p: 1,\n          m: 1,\n          bgcolor: \"#9e9e9e\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, __jsx(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \" \", post.title, \" \")), __jsx(Box, {\n          p: 1,\n          m: 1,\n          bgcolor: \"#9e9e9e\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \" \", post.body), __jsx(Fab, {\n          color: \"primary\",\n          \"aria-label\": \"edit\",\n          onClick: function onClick(e) {\n            return _this2.updatePost(e, post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, __jsx(EditIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        })), __jsx(Dialog, {\n          open: _this2.state.open,\n          onClose: _this2.handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, __jsx(DialogTitle, {\n          id: \"form-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"change post body \"), __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, __jsx(DialogContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, __jsx(TextField, {\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, post);\n          },\n          margin: \"dense\",\n          name: \"post body\",\n          defaultValue: _this2.state.currentPostBody,\n          multiline: true,\n          rows: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }))), __jsx(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, __jsx(Button, {\n          onClick: _this2.handleClose,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Cancel\"), __jsx(Button, {\n          onClick: _this2.handleClose,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"save\"))), __jsx(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          startIcon: __jsx(DeleteIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }),\n          onClick: function onClick(e) {\n            return _this2.deletePost(e, post, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Delete\"));\n      })), __jsx(Grid, {\n        item: true,\n        sm: true,\n        bgcolor: \"e0e0e0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        m: 1,\n        bgcolor: \"#e0e0e0\",\n        height: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(PostForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.posts,\n    newPost: state.posts.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Posts);","map":{"version":3,"sources":["C:/Users/sitekey/Desktop/admin-dashboard/components/posts.js"],"names":["Layout","React","Component","connect","fetchPosts","PostForm","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddIcon","EditIcon","DeleteIcon","Fab","Grid","Box","Posts","props","e","post","body","target","value","setState","last_edited_post","console","log","state","i","posts","splice","users","open","id","currentPostBody","push","setOpen","nextProps","newPost","unshift","marginTop","map","title","updatePost","handleClose","handleChange","deletePost","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from './layout'\r\nimport React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport   { fetchPosts }  from \"../redux/actions/postActions\";\r\nimport  PostForm  from \"./postForm\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\n\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            posts: [],\r\n            currentPostBody: '',\r\n            last_edited_post: null,\r\n            open: false, \r\n            setOpen: false,\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n        console.log(this.props.posts)\r\n       \r\n     this.setState({ posts: this.props.posts })\r\n    }   \r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.newPost){\r\n            console.log(nextProps.newPost)\r\n            this.props.posts.unshift(nextProps.newPost)\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value\r\n       this.setState({ last_edited_post: post })\r\n       console.log(this.state.last_edited_post)\r\n\r\n    }\r\n    deletePost = (e, post, i) => {\r\n        console.log(i)\r\n        console.log(this.props.posts)\r\n        this.props.posts.splice(i, 1)\r\n        console.log(this.props.posts)\r\n        this.setState({posts: this.props.users })\r\n        console.log(this.state.users)\r\n\r\n    \r\n    } \r\n\r\n    \r\n     handleClose = () => {\r\n        this.setState({ open: false }) \r\n      };\r\n\r\n      updatePost = (e, post) => {\r\n        this.setState({ open: true })\r\n        console.log(post.id)\r\n        this.setState({ currentPostBody: post.body })\r\n        console.log(post)\r\n        this.props.posts.push(post)\r\n        this.setState({posts: this.props.posts })\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            \r\n                \r\n        <Grid container style={{ marginTop: 50}}>\r\n            <Grid item sm ={ 8   }>\r\n                \r\n            {\r\n                this.props.posts.map((post, i) => (\r\n                   \r\n                    <Box  key={i} component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"#e0e0e0\">\r\n                    <Box  p={1} m={1} bgcolor=\"#9e9e9e\"><h3> {post.title} </h3></Box>\r\n                    <Box p={1} m={1} bgcolor=\"#9e9e9e\"> {post.body}</Box>\r\n                    \r\n                <Fab color=\"primary\" aria-label=\"edit\" onClick={(e) => this.updatePost(e, post)}>\r\n                    <EditIcon />\r\n                </Fab>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">change post body </DialogTitle>\r\n                    <div >\r\n                    <DialogContent>\r\n                        <TextField onChange={(e) =>  this.handleChange(e, post)}\r\n                            margin=\"dense\"\r\n                            name=\"post body\"\r\n                            defaultValue={ this.state.currentPostBody }\r\n                            multiline = {true}\r\n                            rows = '10'                         \r\n                           \r\n                        />       \r\n                    </DialogContent>\r\n                    </div>\r\n                    <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={ this.handleClose} color=\"primary\">\r\n                        save\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                     onClick = { (e)=> this.deletePost(e, post, i) }\r\n                    >\r\n                    Delete\r\n                    </Button>\r\n                </Box>    \r\n                            ))\r\n                        } \r\n                    </Grid> \r\n                     <Grid item sm bgcolor=\"e0e0e0\">\r\n                        <Box   component=\"span\" display=\"block\" p={1} m={1} bgcolor=\"#e0e0e0\" height= '100%'>\r\n                        <PostForm   />\r\n                        </Box>\r\n                     </Grid>\r\n                </Grid>\r\n                                \r\n             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.posts.posts,\r\n    newPost: state.posts.post\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchPosts})(Posts)\r\n"]},"metadata":{},"sourceType":"module"}