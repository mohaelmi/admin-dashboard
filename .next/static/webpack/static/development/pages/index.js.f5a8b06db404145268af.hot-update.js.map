{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f5a8b06db404145268af.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from './comments'\r\nimport Link from 'next/link';\r\nimport Popup from \"reactjs-popup\"\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n            editOne: null,\r\n            updatedPost : null,\r\n            showCreatePostForm: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne } = this.state;\r\n        this.setState({editOne : post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n     deletePost = (e, post, i) => {\r\n         const { posts } = this.state\r\n         console.log(post.id)\r\n         posts.splice(i, 1);\r\n         this.setState({ posts: posts })\r\n     } \r\n\r\n    render() {\r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n            <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '70%'}  }>   \r\n            <button > create new post </button>\r\n            <form>\r\n                <label>Describtion<span className=\"required\">*</span></label>\r\n                <label>title</label><input  type=\"text\" name=\"title\"  />\r\n                <textarea name=\"body\" ></textarea>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            </div>\r\n                <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        \r\n                            \r\n            <Popup trigger={<button onClick={() => this.updatePost(post)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, post)}>{post.body}</textarea>\r\n                        </div>\r\n                         <button  onClick={this.submitPost }>save</button>\r\n            </Popup>\r\n            <button onClick={ (e) => this.deletePost(e, post, i) }> delete </button>\r\n                         </div>\r\n                        ))\r\n                    }\r\n                  </div>  \r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA6BA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhCA;AAkCA;AAAA;AAAA;AACA;AACA;AApCA;AAqCA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxCA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;;;AAUA;AAAA;AAEA;AAAA;AAAA;AACA;;;AAkbA;AAoBA;;;;;;;;;;AAjEA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;AApBA;AACA;AAoFA;;;;A","sourceRoot":""}