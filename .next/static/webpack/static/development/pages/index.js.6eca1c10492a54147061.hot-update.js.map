{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6eca1c10492a54147061.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react'\r\nimport Layout from '../components/layout'\r\nimport Comments from './comments'\r\nimport Link from 'next/link';\r\nimport Popup from \"reactjs-popup\"\r\nimport Posts from \"../components/posts\";\r\n\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts : [],\r\n           \r\n            title: null,\r\n            body: null, \r\n            id: null,\r\n            newPost: {\r\n              title: null,\r\n              body: null, \r\n              id: null,\r\n            },\r\n            editOne: null,\r\n            updatedPost : null,\r\n            showCreatePostForm: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let {posts} = this.props;\r\n        this.setState({posts});\r\n    }    \r\n\r\n    static async getInitialProps(){\r\n        const res = await fetch('http://jsonplaceholder.typicode.com/posts');\r\n        const data = await res.json();\r\n        return { posts: data }\r\n    }\r\n\r\n    \r\n\r\n    updatePost(post) {\r\n        let {editOne } = this.state;\r\n        this.setState({editOne : post.id});\r\n    }\r\n\r\n    handleChange = (e, post) => {\r\n        post.body = e.target.value;\r\n        this.setState({updatedPost: post});\r\n    }\r\n\r\n    submitPost = () => {  \r\n        this.setState({  editOne: null })\r\n     } \r\n\r\n     deletePost = (e, post, i) => {\r\n         const { posts } = this.state\r\n         console.log(post.id)\r\n         posts.splice(i, 1);\r\n         this.setState({ posts: posts })\r\n     } \r\n\r\n     creatPost = (e) => {\r\n         //const { newPost } = this.state.newPost\r\n        this.setState({ [e.target.name] : e.target.value })\r\n        const  id = this.state.id\r\n        const title = this.state.title\r\n        const body = this.state.body\r\n        const newPost = {\r\n            id: id,\r\n            title: title,\r\n            body: body\r\n        }\r\n\r\n        this.setState({ newPost : newPost })\r\n        \r\n    }\r\n    \r\n    buCreatePost = (event) => {\r\n        event.preventDefault();\r\n        const { posts, newPost } = this.state\r\n        console.log(posts)\r\n        posts.push(newPost)\r\n        this.setState({ posts })\r\n        console.log(newPost)\r\n     }\r\n\r\n    render() {\r\n        \r\n        let {editOne, posts, updatedPost} = this.state;\r\n        console.log('uuuuuu',updatedPost)\r\n\r\n        return (\r\n            <Layout>\r\n           {/* <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }>   \r\n             <button onClick={ ()=>{ this.setState({ showCreatePostForm: true }) } }> create new post </button>\r\n            { this.state.showCreatePostForm  && <form >\r\n               <label >id</label><input  type=\"text\" name=\"id\" onChange={(e)=>{ this.creatPost(e) }}  /><br></br>\r\n                <label >title</label><input  type=\"text\" name=\"title\" onChange={(e)=>{ this.creatPost(e) }}   />\r\n                <textarea name=\"body\" onChange={(e)=>{ this.creatPost(e) }} style={  {padding: '20px'}  }></textarea>\r\n                <input type=\"submit\" value=\"Submit\"  onClick={ this.buCreatePost } />\r\n               </form> }\r\n            </div>\r\n                <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\"}   }>\r\n                   {\r\n                        posts.map((post, i) => (\r\n                            <div  key={i} >\r\n                            <h3 >{post.title} </h3>\r\n                            <p >{post.body}</p>\r\n                        \r\n                            \r\n            <Popup trigger={<button onClick={() => this.updatePost(post)}>update</button>}\r\n                        position=\"right center\">\r\n                        <div>\r\n                            <textarea onChange={(e) => this.handleChange(e, post)} style={  {padding: '40px'}  }>{post.body}</textarea>\r\n                        </div>\r\n                         <button  onClick={this.submitPost }>save</button>\r\n            </Popup>\r\n            <button onClick={ (e) => this.deletePost(e, post, i) }> delete </button>\r\n                         </div>\r\n                        ))\r\n                    }\r\n\r\n                  </div>   */}\r\n                  {/* <Posts /> */}\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAzCA;AA2CA;AAAA;AAAA;AACA;AACA;AA7CA;AA8CA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApDA;AAsDA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAEA;AACA;AApEA;AAsEA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA1EA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAbA;AAHA;AAkBA;AACA;;;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;;;AAUA;AAAA;AAEA;AAAA;AAAA;AACA;;;AA2CA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;;;;;;;;;;AA7FA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;AA7BA;AACA;AAyHA;;;;A","sourceRoot":""}