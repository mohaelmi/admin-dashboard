{"version":3,"file":"static/webpack/static\\development\\pages\\users-page.js.c3e84e825d453efd0379.hot-update.js","sources":["webpack:///./components/userForm.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport {  CreateUsers } from \"../redux/actions/userActions\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nclass UserForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: null,\r\n            name: null,\r\n            username: null,\r\n            showCreateUserForm: false\r\n        }\r\n    }\r\n\r\n     handleCreatUser = (e) => {\r\n        //const { newUser } = this.state\r\n        this.setState({ [e.target.name] : e.target.value })\r\n        \r\n     }\r\n\r\n     onSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            username: this.state.username\r\n        }\r\n\r\n        this.props.CreateUsers(user)\r\n     }\r\n    \r\n     renderTextField(){\r\n        return  ({\r\n            label,\r\n            input,\r\n            meta: { touched, invalid, error },\r\n            ...custom\r\n          }) => (\r\n            <TextField\r\n              label={label}\r\n              placeholder={label}\r\n              error={touched && invalid}\r\n              helperText={touched && error}\r\n              {...input}\r\n              {...custom}\r\n            />\r\n          )\r\n     }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n    <div>\r\n\r\n    <form onSubmit={this.onSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"firstName\"\r\n          component={this.renderTextField}\r\n          label=\"First Name\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field name=\"name\" component={this.renderTextField} label=\"name\" />\r\n      </div>\r\n      <div>\r\n        <Field name=\"lastName\" component={this.renderTextField} label=\"Last Name\" />\r\n      </div>  \r\n      \r\n    </form> </div>\r\n\r\n\r\n\r\n\r\n        // <div style={  {position : \"absolute\", width: \"300px\",height: \"120px\", marginLeft: '50%', padding: '100px'}  }> \r\n        //      <Fab color=\"primary\" aria-label=\"add\"  >\r\n        //      <AddIcon onClick={ ()=>{ this.setState({ showCreateUserForm: true }) } } />\r\n        //     </Fab>  \r\n        //     {/* <button > create new User </button> */}\r\n        //     { this.state.showCreateUserForm  && <form  onSubmit = {this.onSubmit}>\r\n        //     <label >id</label><input  type=\"text\" name=\"id\"  onChange={(e)=>{ this.handleCreatUser(e) }} /><br></br>\r\n        //     <label >Name</label><input  type=\"text\" name=\"name\"  onChange={(e)=>{ this.handleCreatUser(e) }}  />\r\n        //     <label >User Name</label><input  type=\"text\" name=\"username\" onChange={(e)=>{ this.handleCreatUser(e) }}  />\r\n        //     <input type=\"submit\" value=\"Submit\"  />\r\n        //  </form> } \r\n      \r\n        )\r\n    }\r\n}\r\n\r\nUserForm.PropTypes = {\r\n    CreateUsers: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users\r\n})\r\n\r\nexport default  connect(mapStateToProps, {CreateUsers})(UserForm)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AAEA;AACA;AAhBA;AAkBA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAzBA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AAmBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAeA;;;AAGA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAsCA;;;;AAxFA;AACA;AA0FA;AACA;AADA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;;;;A","sourceRoot":""}