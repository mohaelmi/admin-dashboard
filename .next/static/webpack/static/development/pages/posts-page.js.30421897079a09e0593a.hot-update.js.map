{"version":3,"file":"static/webpack/static\\development\\pages\\posts-page.js.30421897079a09e0593a.hot-update.js","sources":["webpack:///./components/postForm.js","webpack:///./redux/actions/postActions.js","webpack:///./redux/reducers/posts-reducer.js","webpack:///./redux/types.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport {  CreatePost } from \"../redux/actions/postActions\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n// import { Field, reduxForm } from 'redux-form'\r\n\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: null,\r\n            title: null,\r\n            body: null,\r\n            showCreatePostForm: false\r\n        }\r\n    }\r\n\r\n     handleCreatPost = (e) => {\r\n        //const { newUser } = this.state\r\n        this.setState({ [e.target.name] : e.target.value })\r\n        \r\n     }\r\n\r\n     onSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            body: this.state.body\r\n        }\r\n\r\n        this.props.CreatePost(post)\r\n     }\r\n    \r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div>\r\n                <h3> add new post <ArrowDownwardIcon /></h3>\r\n            \r\n                <Fab color=\"primary\" aria-label=\"add\"  >\r\n                <AddIcon onClick={ ()=>{ this.setState({ showCreatePostForm: true }) } } />\r\n                </Fab>  \r\n            {this.state.showCreatePostForm  && <form onSubmit={this.onSubmit}>\r\n            <div>\r\n            <TextField label=\"id\" placeholder=\"id\" name= 'id' onChange={(e)=>{ this.handleCreatPost(e) }} />\r\n            </div>\r\n            <div>\r\n            <TextField label=\"name\" placeholder=\"name\" name= 'name' onChange={(e)=>{ this.handleCreatPost(e) }}  />\r\n            </div>\r\n            <div>\r\n            <TextField label=\"user name\" placeholder=\"user name\" name= 'username'  onChange={(e)=>{ this.handleCreatPost(e) }}  />\r\n            </div>  \r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\" value=\"Submit\"\r\n            >\r\n                Save\r\n            </Button>\r\n            </form> } </div>\r\n\r\n            )\r\n        }\r\n}\r\n\r\n// UserForm.PropTypes = {\r\n//     CreateUsers: PropTypes.func.isRequired\r\n// }\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users\r\n})\r\n\r\nexport default  connect(mapStateToProps, {CreatePost})(PostForm)","import { FETCH_POSTS, NEW_POST } from \"../types\";\r\n\r\nexport function fetchPosts() {\r\n    console.log('fetch')\r\n    return function(dispatch){\r\n        fetch('http://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(posts  => dispatch({\r\n            type: FETCH_POSTS,\r\n            payload: posts\r\n        }))\r\n    }\r\n}\r\n\r\nexport function CreatePost(posts) {\r\n    return function(dispatch){\r\n        console.log('action called')\r\n        fetch('http://jsonplaceholder.typicode.com/posts', {\r\n            method: 'POST', \r\n            headers: {\r\n            'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(posts)\r\n        })\r\n        .then(res  => res.json())\r\n        .then(post  => dispatch({\r\n            type: NEW_POST,\r\n            payload: post\r\n        }))\r\n        \r\n    }\r\n}","import { FETCH_POSTS, NEW_POST } from \"../types\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: {}\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type) {\r\n        case FETCH_POSTS:\r\n            console.log('reducer')\r\n         return {\r\n             ...state,\r\n             posts: action.payload\r\n         }\r\n         case NEW_POST :\r\n             console.log('REDUCER   POST')\r\n            return { \r\n                ...state,\r\n                post: action.payload\r\n          }\r\n        default: \r\n        return state \r\n    }\r\n}\r\n","export const FETCH_USERS = 'FETCH_POST';\r\nexport const NEW_USERS = 'NEW_POST';\r\nexport const LAST_UPDATE = 'LAST_PDATE'\r\nexport const FETCH_POSTS = 'FETCH_POSTS'\r\nexport const NEW_POST = 'NEW_POST'\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AAEA;AACA;AAhBA;AAkBA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAzBA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AAomEA;AACA;AACA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC7FA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AACA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAdA;AAgBA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}